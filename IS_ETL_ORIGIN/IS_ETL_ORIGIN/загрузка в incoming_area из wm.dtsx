<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/21/2022 8:20:19 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="UKRO-S-DWH20"
  DTS:CreatorName="REGOP\ebileeva"
  DTS:DTSID="{F3AD7121-1E32-4A98-8459-24BC548B39DE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:FailParentOnFailure="True"
  DTS:LastModifiedProductVersion="16.0.5223.0"
  DTS:LocaleID="1049"
  DTS:ObjectName="загрузка в incoming_area из wm"
  DTS:PackageType="5"
  DTS:ProtectionLevel="1"
  DTS:SuppressConfigurationWarnings="True"
  DTS:VersionBuild="793"
  DTS:VersionGUID="{6E9ECDC9-3C91-4456-8C56-0D47459F0A2F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8584DDF6-85B5-4E0F-91BE-E26BDFFC6B6E}"
      DTS:ObjectName="auth_login"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA8FmAgmp39E2oYL43ZeAZTwAAAAACAAAAAAAQZgAAAAEAACAAAAAq/00G4qpHswDVlDjiYNq4F8CtdMRtbU1nHUe9EF/feAAAAAAOgAAAAAIAACAAAABYIuC16cjwUExAKupB47BqSK2rcJpUFmiZrJpVsFBA3SAAAAAjEC4jdQXFrvp7pYX8hXubHKYy/QdDFlPCP/23EV+ZyEAAAABcywyIEOyOUis1JOzF8oD8+ZjvvYdC1G3xZAnd/Wt7uSenpEV8JVMWt1CueJsy77ozy/SXPRjRS+I/NLssGBLH</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{0523F374-3EEF-4690-B58F-ABC4F5A4928D}"
      DTS:ObjectName="auth_password"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA8FmAgmp39E2oYL43ZeAZTwAAAAACAAAAAAAQZgAAAAEAACAAAADnPNjyiUErvnIA/Nq+4o+GVoMq6cja2F5nGv/qgoHs5wAAAAAOgAAAAAIAACAAAACkB8r/guKRr0AR76DDHQplEltZgASuQIPzjcYzP0gcWxAAAABf+RG41tD7fgzu7fEXl3XzQAAAAOEQrxZ73WlyLt+qwH0uvzWlXzNbXtUh04HnbyNuGDAZ9c4EsQ59ERZjwnTzQz3eQuddVgXHGuuOo5f2yZr+5B0=</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{F8869D85-589D-4D0D-AD29-8803A90979C0}"
      DTS:ObjectName="dwh_load_queue_id">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1672180</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{6566E07F-EA39-4B2D-8793-8187AFC13094}"
      DTS:ObjectName="dwh_thread_number">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C74977C7-39C8-41FC-BD48-E459AC30981A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="data_csv">
      <DTS:VariableValue
        DTS:DataType="17">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{04171160-634D-43E6-B2B8-9F890755FFC3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_api_status">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60A5A230-4806-46B9-B621-CF3F22BCA888}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_api_status_message">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ECD724F4-1677-4274-9551-BDBD57467132}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_attempt_number_for_del">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F18073B1-558B-41BB-AD39-D7F407FB6023}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_code_status">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0703B3C-FF8B-4388-A33B-6AA13C9360F8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_code_status_message">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E3C93077-8329-4B95-AF8B-3A04DE4B4157}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_download_url">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A37022D0-7B6B-4C05-8749-61E2D72E2CF0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_error_message">
      <DTS:VariableValue
        DTS:DataType="8">The expression for variable "dwh_layer_target_table" failed evaluation. There was an error in the expression.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DCA5B14D-770E-495F-868A-D920C66E3326}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_execution_param_id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D4D76C2-C07F-43C3-8479-757CB6786C3D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_instance_id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{18BF52C6-89DE-4289-92BE-2308D38CE709}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_instance_url">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D71CFCC8-BF12-4033-B57A-622030A6C90E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_layer_execution_from_datetime">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C241CE1C-1B9D-4A15-A3C2-F1DD973A1735}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_layer_execution_to_datetime">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D0E6A281-2C84-4D95-B40A-1DC427825352}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_layer_row_count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5C87DFEB-2429-49DE-9A1A-067AD79BEC99}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_load_data_id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{408AD05A-1E53-464F-9327-A81968CD723A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_load_step">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{700BFC36-974F-4436-B820-C397B294CEE4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_queue_execution_log_id">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{49C976F7-F61B-410F-A2A1-4ABFF620D3D5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_queue_param_json">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B8322125-4ABF-49A4-98BB-8E5F66B166A8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_report_name">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C557B30A-463B-4980-BD4B-8A19AE0C57C9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_report_status">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{51F31BE2-41B9-4606-8C80-E85A96AE6E6A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_request_id">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BDC1F66A-18A7-4826-82B8-72FEA9EB1E24}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_request_json">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E7C410D5-30E7-4058-9DA6-F9A0C495C3B8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_retrieval_retry_interval_seconds">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1B6A92D9-8D38-47CE-9CC3-E6CE1C7F7F0C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_retry_count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD522DFD-AF3F-4C42-9113-BA05D96221BA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_retry_timeout_seconds">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F4BEA632-2D27-4155-9A35-4B36B719E71F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_status">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{750D59EF-0D6F-48FC-88EA-D90B671E0293}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_wm_template_id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Задача &quot;Выполнение SQL&quot; начало обработки задания в таблице очереди"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{871926f6-d7f2-48ec-a49d-b119bbb9db4f}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; начало обработки задания в таблице очереди"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
          SQLTask:SqlStatementSource="exec service_area.p_queue_line_begin ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - failure"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{b64b8849-d6d2-4cdc-9422-05a3e99e6e5c}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - failure"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
          SQLTask:SqlStatementSource="exec service_area.p_queue_line_finish ?,?, 'failure'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::dwh_execution_param_id"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - success"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A30036A9-74D1-49D0-9FCF-69743BF2EC8A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - success"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
          SQLTask:SqlStatementSource="exec service_area.p_queue_line_finish ?,?, 'success'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::dwh_execution_param_id"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Задача &quot;Выполнение SQL&quot; обновление информациии о начале в таблице очереди"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{48199525-B6F5-4F89-82D9-4C359A277207}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; обновление информациии о начале в таблице очереди"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
          SQLTask:SqlStatementSource="exec service_area.p_wm_queue_get_param ?, ? output, ? output, ? output, ? output, ? output, ? output, ? output, ? output, ? output" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::dwh_report_name"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::dwh_queue_param_json"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="User::dwh_retry_count"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="4"
            SQLTask:DtsVariableName="User::dwh_retry_timeout_seconds"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="5"
            SQLTask:DtsVariableName="User::dwh_retrieval_retry_interval_seconds"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="6"
            SQLTask:DtsVariableName="User::dwh_instance_url"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="7"
            SQLTask:DtsVariableName="User::dwh_execution_param_id"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="8"
            SQLTask:DtsVariableName="User::dwh_request_id"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="9"
            SQLTask:DtsVariableName="User::dwh_instance_id"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Контейнер последовательности общий процесс загрузки"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{C0170B4A-B539-4698-A42D-65266CBAB598}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Контейнер последовательности общий процесс загрузки">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Задача &quot;Выполнение SQL&quot; добавляем задание для загрузки staging_area"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{b41b4dce-c189-4ff7-8af8-6e344bcd7f33}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Задача &quot;Выполнение SQL&quot; добавляем задание для загрузки staging_area"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
              SQLTask:SqlStatementSource="exec service_area.p_queue_insert_staging_area ?, ?, ?&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::dwh_execution_param_id"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::dwh_queue_param_json"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::dwh_layer_execution_to_datetime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{79665cc1-c131-4d25-9b17-53bef096b89f}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Контейнер последовательности отправка запроса к api">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задания выражения генерируем  актуальную дату - dwh_execution_from_datetime"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{de1e0131-a1fb-497b-9167-99a56e97bac8}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задания выражения генерируем  актуальную дату - dwh_execution_from_datetime"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::dwh_layer_execution_from_datetime] =  &#xA;  (DT_WSTR, 4)YEAR(getdate()) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)MONTH(getdate()), 2) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DAY(getdate()), 2) + &quot; &quot; +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Hour&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Minute&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Second&quot;, getdate()), 2) +&quot;.&quot; + Right(&quot;000&quot; + (DT_WSTR,3) datepart(&quot;Ms&quot;, getdate()),3)" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{528dec8e-ef22-4833-a1dc-cb41243de064}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::dwh_layer_execution_to_datetime] =  &#xA;  (DT_WSTR, 4)YEAR(getdate()) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)MONTH(getdate()), 2) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DAY(getdate()), 2) + &quot; &quot; +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Hour&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Minute&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Second&quot;, getdate()), 2) +&quot;.&quot; + Right(&quot;000&quot; + (DT_WSTR,3) datepart(&quot;Ms&quot;, getdate()),3)" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{9e354c63-f3f4-4a43-9a1b-cdd687ed01bd}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                  SQLTask:SqlStatementSource="exec service_area.p_wm_queue_param_json_update &#xA;?, ?, ?, ? output" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::dwh_request_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::dwh_load_data_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="User::dwh_queue_param_json"
                    SQLTask:ParameterDirection="Output"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; генерируем json_request"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{312b8b07-04f4-44e9-9f5f-b86ee69cc2eb}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задача &quot;Выполнение SQL&quot; генерируем json_request"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                  SQLTask:SqlStatementSource="exec service_area.p_wm_template_wm_generate_json_request ? ,? output" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::dwh_queue_param_json"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::dwh_request_json"
                    SQLTask:ParameterDirection="Output"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; начало лога отправка запроса по api"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{196e043c-d496-4e08-807d-eff4f42f3beb}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задача &quot;Выполнение SQL&quot; начало лога отправка запроса по api"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                  SQLTask:SqlStatementSource="exec service_area.p_queue_exectuion_log_begin &#xA;? , ?, 'request_report', ?&#xA;, ?, ?, ?, ?&#xA;, ? output&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::dwh_execution_param_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::dwh_layer_execution_from_datetime"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="$Package::dwh_thread_number"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="4"
                    SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="72"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="5"
                    SQLTask:DtsVariableName="System::ServerExecutionID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="6"
                    SQLTask:DtsVariableName="User::dwh_report_name"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="7"
                    SQLTask:DtsVariableName="User::dwh_queue_execution_log_id"
                    SQLTask:ParameterDirection="Output"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; окончание лога отправка запроса по api"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3b680d72-6225-4d31-bdd3-70b82537b15b}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задача &quot;Выполнение SQL&quot; окончание лога отправка запроса по api"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                  SQLTask:SqlStatementSource="exec service_area.p_queue_exectuion_log_finish&#xA; ?, 'request_report', ?,  'success', ?, null, null&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::dwh_layer_execution_to_datetime"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::dwh_queue_execution_log_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{06d61c15-ac50-487e-8998-59bb882fa4e3}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задача &quot;Скрипт&quot; формирование csv файла на источнике *"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{230BC094-1B18-4DF1-9455-6DA55D126F5E}"
                  DTS:EventID="6291536"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{9820EABB-8C94-4E5C-BBE3-8877DED9DAB6}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
                      DTS:CreationName="Microsoft.ExpressionTask"
                      DTS:Description="Expression Task"
                      DTS:DTSID="{3cdb886b-44a9-4a07-988a-a3964634c1be}"
                      DTS:ExecutableType="Microsoft.ExpressionTask"
                      DTS:FailParentOnFailure="True"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0"
                        DTS:LoggingMode="2" />
                      <DTS:ObjectData>
                        <ExpressionTask
                          Expression="@[User::dwh_layer_execution_to_datetime] =  &#xA;  (DT_WSTR, 4)YEAR(getdate()) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)MONTH(getdate()), 2) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DAY(getdate()), 2) + &quot; &quot; +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Hour&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Minute&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Second&quot;, getdate()), 2) +&quot;.&quot; + Right(&quot;000&quot; + (DT_WSTR,3) datepart(&quot;Ms&quot;, getdate()),3)" />
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; генерируем dwh_queue_param_json"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Description="Execute SQL Task"
                      DTS:DTSID="{6b36c9cf-7b98-4f93-8e16-5e5279b6f92b}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:FailParentOnFailure="True"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; генерируем dwh_queue_param_json">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0"
                        DTS:LoggingMode="2" />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                          SQLTask:SqlStatementSource="exec service_area.p_wm_queue_param_json_update &#xA;?, ?, ? output" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="1"
                            SQLTask:DtsVariableName="User::dwh_request_id"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="2"
                            SQLTask:DtsVariableName="User::dwh_queue_param_json"
                            SQLTask:ParameterDirection="Output"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; окончание лога отправка запроса по api - failure"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Description="Execute SQL Task"
                      DTS:DTSID="{73976b02-8677-4efe-8aa3-783f4a3226c6}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:FailParentOnFailure="True"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; окончание лога отправка запроса по api - failure">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0"
                        DTS:LoggingMode="2" />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                          SQLTask:SqlStatementSource="exec service_area.p_queue_exectuion_log_finish&#xA; ?, 'request_report', ?,  'failure', ?, ?, null&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="1"
                            SQLTask:DtsVariableName="User::dwh_layer_execution_to_datetime"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="2"
                            SQLTask:DtsVariableName="User::dwh_queue_execution_log_id"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="3"
                            SQLTask:DtsVariableName="System::ErrorDescription"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                  <DTS:PrecedenceConstraints>
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError].PrecedenceConstraints[Constraint 4 1]"
                      DTS:CreationName=""
                      DTS:DTSID="{363aa6b3-0b69-43eb-9aa2-2697bd9e4a7c}"
                      DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint 4 1"
                      DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; окончание лога отправка запроса по api - failure" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError].PrecedenceConstraints[Constraint 5 1]"
                      DTS:CreationName=""
                      DTS:DTSID="{cf5ff9c2-33b3-4b39-81ae-1b480aafeb2f}"
                      DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; генерируем dwh_queue_param_json"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint 5 1"
                      DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime" />
                  </DTS:PrecedenceConstraints>
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_565f9136271a45ddae8185a5959dcd21"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::dwh_instance_url,User::dwh_request_json,$Package::auth_login,$Package::auth_password"
                  ReadWriteVariables="User::dwh_error_message,User::dwh_request_id,User::dwh_status">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_032982e0675347ba99b63ddd20736c6f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_032982e0675347ba99b63ddd20736c6f")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;


//using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
//using Microsoft.SqlServer.Dts.Runtime.Wrapper;


using System.Net;
using System.IO;
using System.Text;

using System.Security.Policy;
using System.Threading;




//using System.Text.Json;
//using Microsoft.SqlServer.Dts.Pipeline;

using Microsoft.VisualBasic;


#endregion

namespace ST_032982e0675347ba99b63ddd20736c6f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        /// 

        private static string auth(string v_username, string v_password)
        {
            //string v_username = "glowbyte";
            //string v_password = "159753";
            string svcCredentials = Convert.ToBase64String(ASCIIEncoding.ASCII.GetBytes(v_username + ":" + v_password));
            //MessageBox.Show(svcCredentials);
            return svcCredentials;
        }

        private static (string, string, string) sendRequest(string url, string json_request, string v_username, string v_password)
        {

            var request_id = string.Empty;
            var status_code = string.Empty;
            var status_desc = string.Empty;

            try
            {
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

                string svcCredentials = auth(v_username, v_password);

                var request = (HttpWebRequest)HttpWebRequest.Create(url);
                request.PreAuthenticate = true;
                request.Method = "POST";
                request.Timeout = 600000;

                WebHeaderCollection headers = new WebHeaderCollection();
                headers.Add("Authorization", "Basic " + svcCredentials);
                request.Headers = headers;

                request.ContentType = @"application/json;charset=UTF-8";
                request.Accept = @"application/json, text/plain, */*";

                byte[] postBytes = Encoding.GetEncoding("UTF-8").GetBytes(json_request);
                request.ContentLength = postBytes.Length;


                Stream requestStream = request.GetRequestStream();
                requestStream.Write(postBytes, 0, postBytes.Length);
                requestStream.Close();


                HttpWebResponse response = (HttpWebResponse)request.GetResponse();


                using (var streamReader = new StreamReader(response.GetResponseStream()))
                {
                    var result = streamReader.ReadToEnd();
                    var StatusCode = ((HttpWebResponse)response).StatusCode;
                    var StatusDesc = ((HttpWebResponse)response).StatusDescription;
                    var StatusContent = ((HttpWebResponse)response).ContentEncoding;
                    request_id = result;
                    status_code = StatusCode.ToString();
                    status_desc = StatusDesc.ToString();
                }


                request_id = request_id.Replace('"', ')');
                request_id = request_id.Replace(")", "");

            }

            catch (Exception e)
            {
                request_id = "";
                status_code = "Error " + status_code;
                status_desc = e.Message + "!" + status_desc;
            }

            return (request_id, status_code, status_desc);

        }


        public void Main()
		{
            
            string instance = (String) Dts.Variables["dwh_instance_url"].Value;  //Variable.dwhinstanceurl;
            string v_username = (String)Dts.Variables["auth_login"].GetSensitiveValue();
            string v_password = (String)Dts.Variables["auth_password"].GetSensitiveValue();
            //string v_username = "glowbyte"; //(String)Dts.Variables["auth_login"].Value;  //Variables.authlogin;//"glowbyte";
            //string v_password = "159753";  //(String)Dts.Variables["auth_password"].Value; //Variables.authpassword;// "159753";        
            string url = instance;

            string json_request = (String)Dts.Variables["dwh_request_json"].Value; //Variables.jsonrequest;
            

            string report_request_id;
            string message_error = string.Empty;
            string status_code = string.Empty;
            string status_desc = string.Empty;

            (report_request_id, status_code, status_desc) = sendRequest(url, json_request, v_username, v_password);
           

            Dts.Variables["dwh_request_id"].Value = report_request_id;
            //Dts.Variables["dwh_status"].Value = status_code;
            //Dts.Variables["dwh_error_message"].Value = status_desc;


            if ((report_request_id != "") & (status_code == "OK"))
            {
                Dts.Variables["dwh_status"].Value = "success";
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            else
            {
                Dts.Variables["dwh_status"].Value = "failure";
                Dts.Events.FireError(0, "error", status_desc, null, 0);
                
            }
            
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_565f9136271a45ddae8185a5959dcd21.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EDDF39FE-D603-4964-8088-5B87DFF84C35}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_032982e0675347ba99b63ddd20736c6f</RootNamespace>
    <AssemblyName>ST_565f9136271a45ddae8185a5959dcd21</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Connected Services\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_565f9136271a45ddae8185a5959dcd21</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_565f9136271a45ddae8185a5959dcd21</msb:DisplayName>
    <msb:ProjectId>{7F4B3D90-F57B-45E1-AEDF-84B748669CA9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_565f9136271a45ddae8185a5959dcd21.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_032982e0675347ba99b63ddd20736c6f.Properties.Settings.get_Default():ST_032982e0675347ba99b63ddd20736c6f.Properties.Sett" +
    "ings")]

namespace ST_032982e0675347ba99b63ddd20736c6f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_032982e0675347ba99b63ddd20736c6f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_032982e0675347ba99b63ddd20736c6f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_032982e0675347ba99b63ddd20736c6f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_032982e0675347ba99b63ddd20736c6f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_032982e0675347ba99b63ddd20736c6f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_565f9136271a45ddae8185a5959dcd21.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKHhHmUAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAxjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHQ3AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAzBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACo
NwAAAAAAAEgAAAACAAUA3CMAAOASAAABAAAAAAAAALw2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIoEAAACgJyAQAAcAMoEQAACm8SAAAKKBMAAAoqAAAAGzAG
AGkBAAABAAARfhQAAAoKfhQAAAoLfhQAAAoMIAAMAAAoFQAACgQFKAEAAAYNAigWAAAKdCQAAAEl
F28XAAAKJXIFAABwbxgAAAolIMAnCQBvGQAACnMaAAAKEwQRBHIPAABwcisAAHAJKBsAAApvHAAA
CiURBG8dAAAKJXI5AABwbx4AAAolcncAAHBvHwAACnK7AABwKCAAAAoDbxIAAAoTBSURBY5pam8h
AAAKJW8iAAAKJREFFhEFjmlvIwAACm8kAAAKbyUAAAp0EQAAARMGEQZvJgAACnMnAAAKEwcRB28o
AAAKEQZvKQAAChMIEQZvKgAAChMJEQZvKwAACiYKEgj+FhMAAAFvLAAACgsRCW8sAAAKDN4MEQcs
BxEHby0AAArcBh8iHylvLgAACgoGcscAAHByywAAcG8vAAAKCt4lcssAAHAKcs0AAHAHKBsAAAoL
bzAAAApy2wAAcAgoEQAACgzeAAYHCHMxAAAKKgAAAEE0AAACAAAA1wAAADoAAAARAQAADAAAAAAA
AAAAAAAAEgAAACkBAAA7AQAAJQAAABQAAAETMAYATQEAAAIAABECKDIAAApvMwAACnLfAABwbzQA
AApvNQAACnQfAAABAigyAAAKbzMAAApyAQEAcG80AAAKbzYAAAp0HwAAAQoCKDIAAApvMwAACnIX
AQBwbzQAAApvNgAACnQfAAABCwIoMgAACm8zAAAKcjMBAHBvNAAACm81AAAKdB8AAAEMfhQAAAom
fhQAAAoTBH4UAAAKEwUIBgcoAgAABiV7NwAACg0lezgAAAoTBHs5AAAKEwUCKDIAAApvMwAACnJV
AQBwbzQAAAoJbzoAAAoJcssAAHAoOwAAChEEcnMBAHAoPAAACl8sLAIoMgAACm8zAAAKcnkBAHBv
NAAACnKPAQBwbzoAAAoCKDIAAAoWbz0AAAoqAigyAAAKbzMAAApyeQEAcG80AAAKcp8BAHBvOgAA
CgIoMgAACm8+AAAKFnKvAQBwEQUUFm8/AAAKJioeAihAAAAKKh4CKEEAAAoqrn4BAAAELR5yuwEA
cNADAAACKEIAAApvQwAACnNEAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIo
RQAACioucwoAAAaAAwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAdAUA
ACN+AADgBQAAgAgAACNTdHJpbmdzAAAAAGAOAAAwAgAAI1VTAJAQAAAQAAAAI0dVSUQAAACgEAAA
QAIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQMAAAD6ATMAFgAAAQAAADAAAAAFAAAABgAAAAsAAAAH
AAAARQAAAAIAAAAQAAAAAgAAAAIAAAADAAAABAAAAAEAAAABAAAABAAAAAEAAAABAAAAAAAlBQEA
AAAAAAYATwPDBgYA3gPDBgYAmwKwBg8ANwcAAAYAyALfBQYAMgPfBQYAEwPfBQYAxQPfBQYAbwPf
BQYAiAPfBQYA3wLfBQYA+gJsBAoAowPUBAoAzwHUBAYAMQCSBQ4ABQbYBw4AAwLYBwYARQZXAA4A
+wDYBwYAGQaSBQYAmQWSBQYAfgKwBgYA0QeSBQYAYQbjBgYAOQbKBQ4ASAIPBQ4ArwIPBQ4A6wG1
BQYAYwLDBgYAYwRFCAYAlwSSBQYACQiSBQ4AcQbYBw4AegHYBw4AFQjYBw4AEQjYBw4A8QWVAAYA
ggVXAA4ABwLYBwYAUgZXAAYAHwGSBQoA/QTUBBIAeQdaARIAFgFaAQoAhQbUBAYAmgGSBQYAKwGS
BQYAVQjfBQAAAABEAAAAAAABAAEAAQAQAKoFKAQ5AAEAAQAAABAA6gZGB10AAQAFAAABEACMB0YH
cQADAAkAAwEAALEHAABVAAQADAARAJ4FMwERAL8BNwERANwAOwEGBoAAPwFWgKEHQgFWgJ8BQgFQ
IAAAAACRALAEWwABAHAgAAAAAJEAIAhGAQMAHCIAAAAAhgCwBQYABwB1IwAAAACGGKMGBgAHAH0j
AAAAAIMYowYGAAcAhSMAAAAAkwhdBlQBBwCxIwAAAACTCKcBWQEHALgjAAAAAJMIswFeAQcAwCMA
AAAAlgjjB2QBCADHIwAAAACGGKMGBgAIAM8jAAAAAJEYqQZpAQgAAAABAE8BAAACAMkAAAABAGIF
AAACACwIAAADAE8BAAAEAMkAAAABACIECQCjBgEAEQCjBgYAGQCjBgoAKQCjBhAAMQCjBhAAOQCj
BhAAQQCjBhAASQCjBhAAUQCjBhAAWQCjBhAAYQCjBhAAaQCjBgYAsQCjBgYA2QCjBhUA6QCjBgYA
8QBNABsA+QDKByAA8QCDBycAAQGGBC0A+QB4CEUACQFNBUgAGQFBAk8AGQEtAlYAGQG+ABAAGQE5
CAEAgQCjBgYA+QDKB1sAKQGRAGEAGQGVB2cAGQGPARAAIQH+BxAA8QBMBG0AGQGeBHMAGQF4BXgA
MQFdAn4AMQEfAgYAGQETAoYAOQFmBXgAkQCjBowAQQG0AJMAiQDsAJcAiQAjBpMAiQBYBJMAuQCV
BJMASQElAgYA+QDUAJwA+QDUAKIAoQAKAZMADACjBrAAcQCpB8MAUQF1B8kAWQGJBc8AYQH8A9YA
YQEQBNYADAAlANoADAArAN4ADAA+AOIAYQEGBOYA+QBqCOsA+QBeCOsAUQHvBwEAUQG/B/EAaQGZ
BvcAcQCjBgYAuQCjBgYAcQE9AQABcQFRCAkBwQCjBg8B4QCjBgYACAAUACkBCAAYAC4BKQBzAKQB
LgALAHwBLgATAIUBLgAbAKQBLgAjAK0BLgArANYBLgAzANYBLgA7ANYBLgBDAK0BLgBLANwBLgBT
ANYBLgBbAPMBQwBjAC4BSQBzAKQBYQB7AC4BYwBrAC4BMwC6AAMAAQAEAAMAAABhBm0BAADHAXIB
AADnB3cBAgAGAAMAAgAHAAUAAQAIAAUAAgAJAAcAqAAEgAAAAQAAAOYhqIcAAAAAAAABAAAABAAA
AAAAAAAAAAAAFwGIAAAAAAAQAAAAAAAAAAAAAAAgAbUEAAAAAAQAAAAAAAAAAAAAABcBkgUAAAAA
EAAAAAAAAAAAAAAAIAFhAAAAAAAAAAAAAQAAAPQGAAAFAAIAAAAAAABTVF81NjVmOTEzNjI3MWE0
NWRkYWU4MTg1YTU5NTlkY2QyMQBJdGVtMQBJdGVtMgBWYWx1ZVR1cGxlYDMASXRlbTMAPE1vZHVs
ZT4AZ2V0X0FTQ0lJAFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFs
dWVfXwBtc2NvcmxpYgBBZGQAU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVkAFJlYWRUb0Vu
ZABzZXRfTWV0aG9kAHZfcGFzc3dvcmQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X1N0YXR1
c0NvZGUASHR0cFN0YXR1c0NvZGUAZ2V0X01lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAdl91c2VybmFtZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFNlY3VyaXR5UHJvdG9jb2xUeXBlAHNldF9Db250ZW50VHlwZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UASHR0cFdlYlJlc3BvbnNl
AEdldFJlc3BvbnNlAENsb3NlAERpc3Bvc2UAc2V0X1ByZUF1dGhlbnRpY2F0ZQBDcmVhdGUARWRp
dG9yQnJvd3NhYmxlU3RhdGUAV3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0
U2Vuc2l0aXZlVmFsdWUAdmFsdWUAU1RfMDMyOTgyZTA2NzUzNDdiYTk5YjYzZGRkMjA3MzZjNmYA
R2V0RW5jb2RpbmcAZ2V0X0NvbnRlbnRFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRvQmFzZTY0U3RyaW5nAFRvU3RyaW5nAHNldF9Db250ZW50TGVuZ3RoAGF1dGgATWljcm9zb2Z0
LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlw
dFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzU2NWY5MTM2
MjcxYTQ1ZGRhZTgxODVhNTk1OWRjZDIxLmRsbABzZXRfU2VjdXJpdHlQcm90b2NvbAB1cmwAR2V0
UmVzcG9uc2VTdHJlYW0AR2V0UmVxdWVzdFN0cmVhbQBnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFN5c3RlbS5SZWZsZWN0aW9uAE5hbWVWYWx1ZUNvbGxlY3Rpb24AV2ViSGVhZGVyQ29sbGVj
dGlvbgBFeGNlcHRpb24AZ2V0X1N0YXR1c0Rlc2NyaXB0aW9uAEN1bHR1cmVJbmZvAFN0cmVhbVJl
YWRlcgBUZXh0UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdlcgBF
dmVudHNPYmplY3RXcmFwcGVyAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8w
MzI5ODJlMDY3NTM0N2JhOTliNjNkZGQyMDczNmM2Zi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMDMyOTgyZTA2NzUzNDdiYTk5YjYzZGRkMjA3MzZjNmYu
UHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEJ5dGVzAFNldHRpbmdzAHNldF9IZWFkZXJzAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVudHMAQ29uY2F0AE9iamVjdABTeXN0
ZW0uTmV0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AHNldF9BY2NlcHQAQ29udmVydABIdHRw
V2ViUmVxdWVzdABzZW5kUmVxdWVzdABqc29uX3JlcXVlc3QAc2V0X1RpbWVvdXQAU3lzdGVtLlRl
eHQAZ2V0X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AG9wX0luZXF1YWxpdHkARW1wdHkAAAAAAzoAAAlQ
AE8AUwBUAAAbQQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgAADUIAYQBzAGkAYwAgAAA9YQBwAHAA
bABpAGMAYQB0AGkAbwBuAC8AagBzAG8AbgA7AGMAaABhAHIAcwBlAHQAPQBVAFQARgAtADgAAUNh
AHAAcABsAGkAYwBhAHQAaQBvAG4ALwBqAHMAbwBuACwAIAB0AGUAeAB0AC8AcABsAGEAaQBuACwA
IAAqAC8AKgAAC1UAVABGAC0AOAABAykAAAEADUUAcgByAG8AcgAgAAADIQAAIWQAdwBoAF8AaQBu
AHMAdABhAG4AYwBlAF8AdQByAGwAABVhAHUAdABoAF8AbABvAGcAaQBuAAAbYQB1AHQAaABfAHAA
YQBzAHMAdwBvAHIAZAAAIWQAdwBoAF8AcgBlAHEAdQBlAHMAdABfAGoAcwBvAG4AAB1kAHcAaABf
AHIAZQBxAHUAZQBzAHQAXwBpAGQAAAVPAEsAABVkAHcAaABfAHMAdABhAHQAdQBzAAAPcwB1AGMA
YwBlAHMAcwAAD2YAYQBpAGwAdQByAGUAAAtlAHIAcgBvAHIAAHFTAFQAXwAwADMAMgA5ADgAMgBl
ADAANgA3ADUAMwA0ADcAYgBhADkAOQBiADYAMwBkAGQAZAAyADAANwAzADYAYwA2AGYALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAJmuVCrjHTJKh8d3ZbNQ/CgA
BCABAQgDIAABBSABARERBCABAQ4FIAEBEWkEAAASeQYAAw4ODg4FIAEdBQ4FAAEOHQURBwoODg4O
EkEdBRJFEkkRTQ4CBg4GAAEBEYCJBgABEoCNDgQgAQECBQACDg4OBSACAQ4OBSABARJBBQABEnkO
BCABAQoFIAASgJkHIAMBHQUICAUgABKAnQYgAQESgJkDIAAOBCAAEU0FIAIOAwMFIAIODg4HFRE9
Aw4ODgkgAwETABMBEwIIBwYODg4ODg4FIAASgKkFIAASgK0GIAESgLEcAyAAHAMGEwADBhMBAwYT
AgQgAQEcBQACAg4OBSAAEoC1CCAFAggODg4ICAABEoC5EYC9BSAAEoDBByACAQ4SgMEIt3pcVhk0
4IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSYQMGEmUDBhIQAgYIAwYRFA0ABBURPQMODg4ODg4OBAAA
EmEEAAASZQUAAQESZQQAABIQAwAAAQQIABJhBAgAEmUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMDMyOTgyZTA2NzUzNDdiYTk5YjYz
ZGRkMjA3MzZjNmYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMgAASQEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0
LjcAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAnDcAAAAAAAAAAAAAtjcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AKg3AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAKiH5iEAAAEAqIfmIT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AMAAzADIAOQA4ADIAZQAwADYANwA1ADMANAA3AGIAYQA5ADkAYgA2ADMAZABkAGQAMgAw
ADcAMwA2AGMANgBmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgA
NgA3ADgALgAzADQANwAyADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8ANQA2ADUAZgA5ADEAMwA2ADIANwAxAGEANAA1AGQAZABhAGUAOAAxADgANQBhADUAOQA1ADkA
ZABjAGQAMgAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA1ADYANQBmADkAMQAzADYAMgA3ADEAYQA0ADUAZABkAGEAZQA4ADEAOAA1AGEA
NQA5ADUAOQBkAGMAZAAyADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMAAzADIAOQA4ADIAZQAwADYANwA1ADMANAA3AGIAYQA5ADkAYgA2ADMAZABkAGQA
MgAwADcAMwA2AGMANgBmAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA4ADYANwA4AC4AMwA0ADcAMgA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA4ADYANwA4AC4AMwA0ADcAMgA4AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMg3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{bb108ee5-240c-4083-a160-0d6216880e49}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задания выражения генерируем  актуальную дату - dwh_execution_from_datetime"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; начало лога отправка запроса по api" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{5c1f23cd-059a-45a0-bb33-4472f39b7da4}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; начало лога отправка запроса по api"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; генерируем json_request" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{f8267a69-2a74-439d-ab29-9eb197724546}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; генерируем json_request"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{20B618C9-E0DB-40B3-BF27-C8C699700459}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{97A45CC3-8B3A-403F-9EBC-C465C2D1F724}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; окончание лога отправка запроса по api" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{2842C90B-8E66-429A-B3B0-0BA23A1B1847}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{81266CEF-05DA-40D5-A189-E518CE9142BD}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Контейнер последовательности скачивание файла по api">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задания выражения генерируем  актуальную дату - dwh_execution_from_datetime"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{8f9da59e-8672-4e2a-bef0-47a2c4a5a06d}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задания выражения генерируем  актуальную дату - dwh_execution_from_datetime"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::dwh_layer_execution_from_datetime] =  &#xA;  (DT_WSTR, 4)YEAR(getdate()) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)MONTH(getdate()), 2) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DAY(getdate()), 2) + &quot; &quot; +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Hour&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Minute&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Second&quot;, getdate()), 2) +&quot;.&quot; + Right(&quot;000&quot; + (DT_WSTR,3) datepart(&quot;Ms&quot;, getdate()),3)" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{b5e4b6d7-31af-4da9-a59d-62c62c2dd8fa}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::dwh_layer_execution_to_datetime] =  &#xA;  (DT_WSTR, 4)YEAR(getdate()) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)MONTH(getdate()), 2) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DAY(getdate()), 2) + &quot; &quot; +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Hour&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Minute&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Second&quot;, getdate()), 2) +&quot;.&quot; + Right(&quot;000&quot; + (DT_WSTR,3) datepart(&quot;Ms&quot;, getdate()),3)" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3ea0b773-9019-4895-8b42-66aaf24d2418}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                  SQLTask:SqlStatementSource="exec service_area.p_wm_queue_param_json_update &#xA;?, ?, ?, ? output" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::dwh_request_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::dwh_load_data_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="User::dwh_queue_param_json"
                    SQLTask:ParameterDirection="Output"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; начало лога скачивание файла по api"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1ca8a55c-bf19-43d7-85d0-b53e24f1d739}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задача &quot;Выполнение SQL&quot; начало лога скачивание файла по api"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                  SQLTask:SqlStatementSource="exec service_area.p_queue_exectuion_log_begin &#xA;? , ?, 'incoming_area', ?&#xA;, ?, ?, ?, ?&#xA;, ? output&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::dwh_execution_param_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::dwh_layer_execution_from_datetime"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="$Package::dwh_thread_number"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="4"
                    SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="72"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="5"
                    SQLTask:DtsVariableName="System::ServerExecutionID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="6"
                    SQLTask:DtsVariableName="User::dwh_report_name"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="7"
                    SQLTask:DtsVariableName="User::dwh_queue_execution_log_id"
                    SQLTask:ParameterDirection="Output"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; окончание лога скачивание файла по api"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{c742ac06-8b53-44f5-80ec-79879d1d9a3e}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задача &quot;Выполнение SQL&quot; окончание лога скачивание файла по api"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                  SQLTask:SqlStatementSource="exec service_area.p_queue_exectuion_log_finish&#xA; ?, 'incoming_area', ?,  'success', ?, null, null&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::dwh_layer_execution_to_datetime"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::dwh_queue_execution_log_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Задача потока данных"
              DTS:DTSID="{33542F7B-2568-45A6-9401-6B5E7AA6748B}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Задача потока данных загрузка csv файла *"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="2" />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{711F6EAA-DA23-470E-B2CF-2BB6A1351E9D}"
                  DTS:EventID="0"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{2F189F97-0F4C-44BC-A682-D7B3A5F90A10}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
                      DTS:CreationName="Microsoft.ExpressionTask"
                      DTS:Description="Expression Task"
                      DTS:DTSID="{f0ba5630-69ed-4f92-885f-bfb352421e22}"
                      DTS:ExecutableType="Microsoft.ExpressionTask"
                      DTS:FailParentOnFailure="True"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0"
                        DTS:LoggingMode="2" />
                      <DTS:ObjectData>
                        <ExpressionTask
                          Expression="@[User::dwh_layer_execution_to_datetime] =  &#xA;  (DT_WSTR, 4)YEAR(getdate()) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)MONTH(getdate()), 2) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DAY(getdate()), 2) + &quot; &quot; +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Hour&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Minute&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Second&quot;, getdate()), 2) +&quot;.&quot; + Right(&quot;000&quot; + (DT_WSTR,3) datepart(&quot;Ms&quot;, getdate()),3)" />
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задания выражения переменные для логирования ошибки"
                      DTS:CreationName="Microsoft.ExpressionTask"
                      DTS:Description="Expression Task"
                      DTS:Disabled="True"
                      DTS:DTSID="{ec3f1b7a-ddab-4a53-a060-2bd302c38021}"
                      DTS:ExecutableType="Microsoft.ExpressionTask"
                      DTS:FailParentOnFailure="True"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Задания выражения переменные для логирования ошибки">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0"
                        DTS:LoggingMode="2" />
                      <DTS:ObjectData>
                        <ExpressionTask
                          Expression="@[User::dwh_layer_execution_to_datetime] =  &#xA;  (DT_WSTR, 4)YEAR(getdate()) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)MONTH(getdate()), 2) + &quot;-&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DAY(getdate()), 2) + &quot; &quot; +&#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Hour&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Minute&quot;, getdate()), 2) + &quot;:&quot; + &#xA;RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Second&quot;, getdate()), 2) +&quot;.&quot; + Right(&quot;000&quot; + (DT_WSTR,3) datepart(&quot;Ms&quot;, getdate()),3)" />
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; добавляем номер попытки скачивания в dwh_queue_param_json"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Description="Execute SQL Task"
                      DTS:Disabled="True"
                      DTS:DTSID="{dc6e1a75-92a4-4f64-87da-a0dc59af9e73}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:FailParentOnFailure="True"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; добавляем номер попытки скачивания в dwh_queue_param_json">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0"
                        DTS:LoggingMode="2" />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                          SQLTask:SqlStatementSource="update service_area.queue&#xA;set dwh_queue_param_json = JSON_MODIFY(dwh_queue_param_json , '$.attempt_number', 1)&#xA;where dwh_load_queue_id = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; окончание лога скачивание файла по api - failure"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Description="Execute SQL Task"
                      DTS:DTSID="{ef65704d-dd92-4c30-9b3a-73ba91a1e6a8}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:FailParentOnFailure="True"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; окончание лога скачивание файла по api - failure">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0"
                        DTS:LoggingMode="2" />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                          SQLTask:SqlStatementSource="exec service_area.p_queue_exectuion_log_finish&#xA; ?, 'incoming_area', ?, 'failure', ?, ?, null&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="1"
                            SQLTask:DtsVariableName="User::dwh_layer_execution_to_datetime"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="2"
                            SQLTask:DtsVariableName="User::dwh_queue_execution_log_id"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="3"
                            SQLTask:DtsVariableName="System::ErrorDescription"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; ошибка скачивания по api"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Description="Execute SQL Task"
                      DTS:Disabled="True"
                      DTS:DTSID="{514c98ee-dc97-418a-a01c-b83d1811da39}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:FailParentOnFailure="True"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; ошибка скачивания по api">
                      <DTS:Variables />
                      <DTS:LoggingOptions
                        DTS:FilterKind="0"
                        DTS:LoggingMode="2" />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
                          SQLTask:SqlStatementSource="exec service_area.p_queue_event_log &#xA; ?,?&#xA;,?,?&#xA;,?,?&#xA;,?,?,?,?,?&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="User::dwh_layer_execution_to_datetime"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="1"
                            SQLTask:DtsVariableName="$Package::dwh_load_queue_id"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="2"
                            SQLTask:DtsVariableName="User::dwh_queue_execution_log_id"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="3"
                            SQLTask:DtsVariableName="System::PackageName"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="4"
                            SQLTask:DtsVariableName="System::TaskName"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="5"
                            SQLTask:DtsVariableName="System::ErrorCode"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="NewParameterName"
                            SQLTask:DtsVariableName="System::ErrorDescription"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="130"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="NewParameterName"
                            SQLTask:DtsVariableName="$Package::auth_login"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                  <DTS:PrecedenceConstraints>
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
                      DTS:CreationName=""
                      DTS:DTSID="{fdf5a484-0fe9-41b6-a787-4fdb8e82833d}"
                      DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint"
                      DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; окончание лога скачивание файла по api - failure" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError].PrecedenceConstraints[Constraint 1]"
                      DTS:CreationName=""
                      DTS:DTSID="{620E7E12-6BF4-43BF-B3F5-7A0F44DE4735}"
                      DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; добавляем номер попытки скачивания в dwh_queue_param_json"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint 1"
                      DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError].PrecedenceConstraints[Constraint 2]"
                      DTS:CreationName=""
                      DTS:DTSID="{288A6228-489E-489B-8D4A-D38EE229956B}"
                      DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint 2"
                      DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задания выражения переменные для логирования ошибки" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError].PrecedenceConstraints[Constraint 3]"
                      DTS:CreationName=""
                      DTS:DTSID="{D579E5BC-316C-4A42-A884-5970ED431B5D}"
                      DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задания выражения переменные для логирования ошибки"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint 3"
                      DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; ошибка скачивания по api" />
                  </DTS:PrecedenceConstraints>
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <pipeline
                  defaultBufferMaxRows="100000"
                  defaultBufferSize="104857600"
                  version="1">
                  <components>
                    <component
                      refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Inputs[Conditional Split Input].Columns[dwh_report_status]"
                              cachedDataType="wstr"
                              cachedLength="128"
                              cachedName="dwh_report_status"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id.Outputs[Output 0].Columns[dwh_report_status]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Outputs[Файл скачали]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Файл скачали"
                          synchronousInputId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id.Outputs[Output 0].Columns[dwh_report_status]} == "DONE"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">dwh_report_status == "DONE"</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="Назначение &quot;OLE DB&quot;;Корпорация Майкрософт. Microsoft SQL Server. (C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены. http://www.microsoft.com/sql/support;4"
                      description="Назначение &quot;OLE DB&quot;"
                      name="OLE DB подключение загрузка сырых данных в incoming_area"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Время ожидания команды, в секундах. Величина 0 означает неограниченное время ожидания."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Указывает имя объекта базы данных, используемого для открытия набора строк."
                          name="OpenRowset">[incoming_area].[data_string]</property>
                        <property
                          dataType="System.String"
                          description="Указывает переменную, содержащую имя объекта базы данных, используемого для открытия набора строк."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="Команда SQL для выполнения."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Указывает кодовую страницу столбца, используемую, когда недоступны сведения о кодовой странице из источника данных."
                          name="DefaultCodePage">1251</property>
                        <property
                          dataType="System.Boolean"
                          description="Вызывает безусловное использование значение свойства DefaultCodePage при описании символьных данных."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Указывает используемый режим доступа к базе данных."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Указывает, должны ли значения в столбцах идентификаторов копироваться в назначение. Если свойство имеет значение false, значения в столбцах идентификаторов будут созданы автоматически в месте назначения. Применяется только в том случае, если включена быстрая загрузка."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Указывает, будут ли в назначение вставляться значения NULL для столбцов, содержащих их. Значение false показывает, что если столбец имеет значение NULL, то в назначение будет вставлено его значение по умолчанию. Применяется только в случае, если включена быстрая загрузка."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Задает параметры быстрой загрузки. Применяется только в том случае, если включена быстрая загрузка."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Задает, когда выдаются сообщения о фиксации транзакции в ходе вставки данных. Значение 0 задает, что по окончании вставки данных будет выдано одно сообщение о фиксации транзакции. Применяется только в том случае, если включена быстрая загрузка."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Connections[OleDbConnection]"
                          connectionManagerID="{2C2C1145-FA85-4C7C-BBF9-52D042352356}:external"
                          connectionManagerRefId="Project.ConnectionManagers[incoming_area]"
                          description="Соединение OLE DB среды выполнения, используемое для доступа к базе данных."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;]"
                          errorOrTruncationOperation="Вставить"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="Вход назначения &quot;OLE DB&quot;">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[dwh_load_queue_id]"
                              cachedDataType="i4"
                              cachedName="dwh_load_queue_id"
                              externalMetadataColumnId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[dwh_load_queue_id]"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца].Columns[dwh_load_queue_id]" />
                            <inputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[report]"
                              cachedDataType="nText"
                              cachedName="report"
                              externalMetadataColumnId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[dwh_data_string]"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id.Outputs[Output 0].Columns[report]" />
                            <inputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[dwh_data_format]"
                              cachedDataType="wstr"
                              cachedLength="16"
                              cachedName="dwh_data_format"
                              externalMetadataColumnId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[dwh_data_format]"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца].Columns[dwh_data_format]" />
                            <inputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].Columns[dwh_instance_id]"
                              cachedDataType="i4"
                              cachedName="dwh_instance_id"
                              externalMetadataColumnId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[dwh_instance_id]"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца].Columns[dwh_instance_id]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[dwh_load_queue_id]"
                              dataType="i4"
                              name="dwh_load_queue_id" />
                            <externalMetadataColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[dwh_load_data_id]"
                              dataType="i8"
                              name="dwh_load_data_id" />
                            <externalMetadataColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[dwh_data_string]"
                              dataType="nText"
                              name="dwh_data_string" />
                            <externalMetadataColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[dwh_instance_id]"
                              dataType="i4"
                              name="dwh_instance_id" />
                            <externalMetadataColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;].ExternalColumns[dwh_data_format]"
                              dataType="wstr"
                              length="16"
                              name="dwh_data_format" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Вывод ошибок назначения &quot;OLE DB&quot;"
                          synchronousInputId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Outputs[Вывод ошибок назначения &quot;OLE DB&quot;].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Производный столбец;Корпорация Майкрософт. Microsoft SQL Server. (C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены. http://www.microsoft.com/sql/support;0"
                      description="Создает новые значения столбцов путем применения выражений к входным столбцам преобразования. Создает новые столбцы или перезаписывает существующие. Пример: объединение значений столбцов &quot;first name&quot; и &quot;last name&quot; и создание столбца &quot;full name&quot;."
                      name="Изменение полей добавление дополнительных полей"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Inputs[Вход производного столбца]"
                          description="Ввод преобразования &quot;Производный столбец&quot;"
                          name="Вход производного столбца">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца]"
                          description="Выход по умолчанию преобразования &quot;Производный столбец&quot;"
                          exclusionGroup="1"
                          name="Выход производного столбца"
                          synchronousInputId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Inputs[Вход производного столбца]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца].Columns[dwh_load_queue_id]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца].Columns[dwh_load_queue_id]"
                              name="dwh_load_queue_id"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[$Package::dwh_load_queue_id]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[$Package::dwh_load_queue_id]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца].Columns[dwh_data_format]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="16"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца].Columns[dwh_data_format]"
                              name="dwh_data_format"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,16)"csv"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,16)"csv"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца].Columns[dwh_instance_id]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца].Columns[dwh_instance_id]"
                              name="dwh_instance_id"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)@[User::dwh_instance_id]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)@[User::dwh_instance_id]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Вывод ошибок производного столбца]"
                          description="Вывод ошибок преобразования &quot;Производный столбец&quot;"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Вывод ошибок производного столбца"
                          synchronousInputId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Inputs[Вход производного столбца]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Вывод ошибок производного столбца].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Вывод ошибок производного столбца].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Вывод ошибок производного столбца].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Вывод ошибок производного столбца].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Скрипт компонент скачивание отчета по request_id"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_3a94531c23ef4772b4d262a94597e1f0.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{69A1A927-51B6-47D5-920A-BC986AE9D91E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_3a94531c23ef4772b4d262a94597e1f0</RootNamespace>
    <AssemblyName>SC_3a94531c23ef4772b4d262a94597e1f0</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json">
      <Version>13.0.1</Version>
    </PackageReference>
    <PackageReference Include="System.Net.Http">
      <Version>4.3.4</Version>
    </PackageReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Windows.Forms;
using System.Net;
using System.IO;
using System.Text;

using System.Data.SqlClient;


using System.Security.Policy;
using System.Threading;


using Microsoft.SqlServer.Dts.Runtime;

using Microsoft.SqlServer.Dts.Pipeline;

using Microsoft.VisualBasic;
//

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]

public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 

   // string message_error = string.Empty;
   // string status = string.Empty;
   // string dt = string.Empty;

    string code_status = string.Empty;
    string code_status_message = string.Empty;

    public override void PreExecute()
    {
        base.PreExecute();

    }


    private static string auth(string v_username, string v_password)
    {
        //string v_username = "glowbyte";
        //string v_password = "159753";
        string svcCredentials = Convert.ToBase64String(ASCIIEncoding.ASCII.GetBytes(v_username + ":" + v_password));
        return svcCredentials;
    }

    private static (string, string, string) LoadReport(string url, string svcCredentials)
    {

        string response = string.Empty;
        string api_status = string.Empty;
        string api_status_message = string.Empty;
       
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

        HttpWebRequest request_get = (HttpWebRequest)HttpWebRequest.Create(url);
        request_get.PreAuthenticate = true;
        request_get.Method = "GET";
        request_get.Timeout = 600000;
        WebHeaderCollection headers_get = new WebHeaderCollection();
        headers_get.Add("Authorization", "Basic " + svcCredentials);


        request_get.Headers = headers_get;
        request_get.Accept = @"*/*";

        HttpWebResponse response_get = (HttpWebResponse)request_get.GetResponse();

        api_status = response_get.StatusCode.ToString();
        api_status_message = response_get.StatusDescription.ToString();
     
        using (Stream s = response_get.GetResponseStream())
        {
            using (StreamReader sr = new StreamReader(s))
            {
                response = sr.ReadToEnd();
            }
        }

        return (response, api_status, api_status_message);
    }


    private static (string, string,  string, string) getRequestStatus(string url, string report_request_id, string svcCredentials)
    {

        //var request_id = string.Empty;
        string report_status_json = string.Empty;
        string report_status = "UNKNOWN";//string.Empty;
        string report_status_message = string.Empty;
        string report_status_json_part = string.Empty;
        var api_status = string.Empty;
        var api_status_message = string.Empty;

        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
       
        var request = (HttpWebRequest)HttpWebRequest.Create(url);
        request.PreAuthenticate = true;
        request.Method = "GET";
        request.Timeout = 600000;

        WebHeaderCollection headers = new WebHeaderCollection();
        headers.Add("Authorization", "Basic " + svcCredentials);
        request.ContentType = @"application/json;charset=UTF-8";
        request.Headers = headers;
        request.Accept = @"application/json, text/plain, */*";
        

        using (HttpWebResponse response_get = (HttpWebResponse)request.GetResponse())
        {
            api_status = response_get.StatusCode.ToString(); 
            api_status_message = response_get.StatusDescription.ToString();
            using (Stream s = response_get.GetResponseStream())
            {
                using (StreamReader sr = new StreamReader(s))
                {
                    report_status_json = sr.ReadToEnd();
                }
            }

            string serverName = "UKRO-S-DWH04";
            string ssisConnectionString = String.Format("Data Source={0}; Initial Catalog=tempdb; Integrated Security=SSPI; Connection Timeout=0; MultipleActiveResultSets=true", serverName);
            SqlConnection ssisConnection = new SqlConnection(ssisConnectionString);
            ssisConnection.Open();

            // Выбор списка job из таблицы sysjobs в базе данных MSDB
            string sql_query_text = @"select                                     
                                   --   JSON_VALUE(j.value, '$.id') as dwh_request_id
                                      JSON_VALUE(j.value, '$.status.name') as dwh_report_status                                                                        
                                    , isnull(JSON_VALUE(j.value, '$.error'), '') as dwh_report_status_message
                                    , value as dwh_api_json
                                    from openjson(@dwh_report_status_json, '$.list') j 
                                    where JSON_VALUE(j.value, '$.id') = @dwh_request_id";



            SqlCommand command = new SqlCommand(sql_query_text, ssisConnection);
            command.Parameters.AddWithValue("@dwh_report_status_json", report_status_json.ToString());
            command.Parameters.AddWithValue("@dwh_request_id", report_request_id.ToString());
            SqlDataReader dataReader = command.ExecuteReader();

            if (dataReader.Read())
            {
                // Получаем название job и выводим его на консоль
                report_status = dataReader.GetString(0);
                report_status_message = dataReader.GetString(1);
                report_status_json_part = dataReader.GetString(2);
                //Console.WriteLine(report_status);
            }
             
            dataReader.Close();
            ssisConnection.Close();

        }

        //report_status_json_part  --- можно еще передавать его
         return (report_status, report_status_message, api_status, api_status_message);

    }


    private static(string, string) postRequestCancel (string url, string report_request_id, string svcCredentials)
    {
        var api_status = string.Empty;
        var api_status_message = string.Empty;

        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      
        var request = (HttpWebRequest)HttpWebRequest.Create(url);
        request.PreAuthenticate = true;
        request.Method = "POST";
        request.Timeout = 600000;

        WebHeaderCollection headers = new WebHeaderCollection();
        headers.Add("Authorization", "Basic " + svcCredentials);
        request.Headers = headers;

        request.ContentType = @"application/json;charset=UTF-8";
        request.Accept = @"application/json, text/plain, */*";


        HttpWebResponse response = (HttpWebResponse)request.GetResponse();
        System.Threading.Thread.Sleep(3 * 1000); //default retry_timeout = 10, 10 sec
        api_status = response.StatusCode.ToString();
        api_status_message = response.StatusDescription.ToString();

        return (api_status, api_status_message);

    }

    public override void CreateNewOutputRows()
    {

        string instance = Variables.dwhinstanceurl;
        string url = instance;
        string v_username = Variables.authlogin; //(String)Variables["auth_login"].GetSensitiveValue();
        string v_password = Variables.authpassword; //(String)Variables["auth_password"].GetSensitiveValue();
        string svcCredentials = auth(v_username, v_password);

        int retry_cnt = Variables.dwhretrycount; // Int32.Parse(Variables.dwhretrycnt);
        int retry_timeout = Variables.dwhretrytimeoutseconds; //Int32.Parse(Variables.retrytimeout);
        string report_request_id = Variables.dwhrequestid;

        string url_requestStatus = url +"/paging?count=10&order=-createTime&page=0";
        string url_download = url + "/download" + "?reportRequestId=" + report_request_id;
        string url_requestCancel = url + "/cancel?reportRequestId=" + report_request_id;

        int cnt = retry_cnt; // default 5        
        string result_data = ""; //для скачанного файла
        int res_len = 0;

        string report_status = "";
        string report_status_message = ""; //для ошибки с источника
        //string report_status_json = "";

        string api_status = "";
        string api_status_message = "";
      
        //string code_status; //статус выполнения кода
        //string code_status_message; //для ошибки из кода

        try
        {
            //считываем статус формирования отчета на источнике
            for (int i = 0; i < cnt; i++)
            {
                System.Threading.Thread.Sleep(100); //default retry_timeout = 10, 10 sec
                (report_status, report_status_message, api_status, api_status_message) = getRequestStatus(url_requestStatus, report_request_id, svcCredentials);

                if (report_status == "BUILDING" || report_status == "NEW" || report_status == "UNKNOWN") //если отчет строится, ждем
                {
                    System.Threading.Thread.Sleep(retry_timeout * 1000); //default retry_timeout = 1 sec
                }
                else
                {
                    break; 
                }
                                                          
            }

            //если завершился таймаут, отменяем получение данных с сервера
            if (report_status == "BUILDING" || report_status == "NEW" ) 
            {

                
                (api_status, api_status_message) = postRequestCancel(url_requestCancel, report_request_id, svcCredentials);
                //получаем новый статус задания на сервере после отмены
                (report_status, report_status_message, api_status, api_status_message) = getRequestStatus(url_requestStatus, report_request_id, svcCredentials);

                code_status = "failure";
                code_status_message = "report_status = " + report_status + "; ";                
                code_status_message = code_status_message + "retry_count:" + retry_cnt + " , retry_timeout:" + retry_timeout;
                if (api_status == "OK")
                {
                    code_status_message += ";request cancelled successfully";

                }
                
                bool cancel = false;
                //this.ComponentMetaData.FireWarning(0, ComponentMetaData.Name, code_status_message, string.Empty, 0);
                this.ComponentMetaData.FireError(0, ComponentMetaData.Name, code_status_message, string.Empty, 0, out cancel);
            }

            else if (report_status == "DONE" ) //отчет готов - скачиваем файл
            {
                (result_data, api_status, api_status_message) = LoadReport(url_download, svcCredentials);
                res_len = result_data.Length;

                if (res_len == 0)
                {
                    code_status = "failure";
                    code_status_message = "размер скачанного файла = 0";
                    bool cancel = false;
                    this.ComponentMetaData.FireError(0, ComponentMetaData.Name, code_status_message, string.Empty, 0, out cancel);                    

                }
            }

            /*статус отчета не равен DONE или CANCEL*/
            else
            {
                code_status = "failure";
                code_status_message = "статус на источнике = " + report_status;
                bool cancel = false;
                this.ComponentMetaData.FireError(0, ComponentMetaData.Name, code_status_message, string.Empty, 0, out cancel);

            }



            Output0Buffer.AddRow();
           // Output0Buffer.downloadurl = url_download;
            Output0Buffer.report.AddBlobData(System.Text.Encoding.Unicode.GetBytes(result_data));
            Output0Buffer.dwhreportstatus = report_status;
           // Output0Buffer.dwhreportstatusmessage = report_status_message;
           // Output0Buffer.dwhapistatus = api_status;
           // Output0Buffer.dwhapistatusmessage = api_status_message;
            //Output0Buffer.status = status;
            //Output0Buffer.errormessage = message_error;           

        }

        catch (Exception e)
        {
            code_status = "failure";
            code_status_message = e.Message.ToString();
            bool cancel = false;
            this.ComponentMetaData.FireError(0, ComponentMetaData.Name,  code_status_message, string.Empty, 0, out cancel);
        }

    }


    public override void PostExecute()
    {
        base.PostExecute();

        //this.ReadWriteVariables["User::dwh_report_load_datetime"].Value = dt;
       // if (status == "failure")
       // { 
            //this.Variables.dwhstatus = "failure";
       //     bool cancel = false;
        //    ComponentMetaData.FireError(0, "CreateNewOutputRows", message_error, null, 0, out cancel);

       // }
        this.Variables.dwhcodestatus = code_status;
        this.Variables.dwhcodestatusmessage = code_status_message;
    }






}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn report
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool report_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String dwhreportstatus
    {
        set
        {
            this[1] = value;
        }
    }
    public bool dwhreportstatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String authlogin
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["auth_login"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String authpassword
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["auth_password"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String dwhinstanceurl
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["dwh_instance_url"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String dwhrequestid
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["dwh_request_id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 dwhretrycount
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["dwh_retry_count"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 dwhretrytimeoutseconds
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["dwh_retry_timeout_seconds"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DWHServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DWH_ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String dwhcodestatus
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["dwh_code_status"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["dwh_code_status"].Value = value;
        }
    }

    public String dwhcodestatusmessage
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["dwh_code_status_message"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["dwh_code_status_message"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_3a94531c23ef4772b4d262a94597e1f0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_3a94531c23ef4772b4d262a94597e1f0")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_3a94531c23ef4772b4d262a94597e1f0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_3a94531c23ef4772b4d262a94597e1f0</msb:DisplayName>
    <msb:ProjectId>{ABD7BEEE-0516-40DC-8D79-883DDE540EA6}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_3a94531c23ef4772b4d262a94597e1f0.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3a94531c23ef4772b4d262a94597e1f0.Properties.Settings.get_Default():SC_3a94531c23ef4772b4d262a94597e1f0.Properties.Sett" +
    "ings")]

namespace SC_3a94531c23ef4772b4d262a94597e1f0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3a94531c23ef4772b4d262a94597e1f0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3a94531c23ef4772b4d262a94597e1f0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3a94531c23ef4772b4d262a94597e1f0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_3a94531c23ef4772b4d262a94597e1f0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_3a94531c23ef4772b4d262a94597e1f0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_3a94531c23ef4772b4d262a94597e1f0.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOXpHmUAAAAAAAAAAOAAIiALATAAADIAAAAIAAAAAAAAWlEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAhRAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYDEAAAAgAAAAMgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA0AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
UQAAAAAAAEgAAAACAAUAxCoAAIwlAAABAAAAAAAAAFBQAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqcigRAAAKAnIBAABwAygSAAAKbxMAAAooFAAA
CioAAAAbMAUA2QAAAAEAABF+FQAACgp+FQAACgt+FQAACgwgAAwAACgWAAAKAigXAAAKdCwAAAEl
F28YAAAKJXIFAABwbxkAAAolIMAnCQBvGgAACnMbAAAKDQlyDQAAcHIpAABwAygcAAAKbx0AAAol
CW8eAAAKJXI3AABwbx8AAApvIAAACnQUAAABJW8hAAAKEwQSBP4WEAAAAW8iAAAKCyVvIwAACm8i
AAAKDG8kAAAKEwURBXMlAAAKEwYRBm8mAAAKCt4YEQYsBxEGbycAAArcEQUsBxEFbycAAArcBgcI
cygAAAoqAAAAARwAAAIArgAKuAAMAAAAAAIApQAfxAAMAAAAABswBQClAQAAAgAAEX4VAAAKCnI/
AABwC34VAAAKDH4VAAAKJn4VAAAKDX4VAAAKEwQgAAwAACgWAAAKAigXAAAKdCwAAAElF28YAAAK
JXIFAABwbxkAAAolIMAnCQBvGgAACnMbAAAKEwURBXINAABwcikAAHAEKBwAAApvHQAACiVyTwAA
cG8pAAAKJREFbx4AAAolco0AAHBvHwAACm8gAAAKdBQAAAETBhEGbyEAAAoTChIK/hYQAAABbyIA
AAoNEQZvIwAACm8iAAAKEwQRBm8kAAAKEwsRC3MlAAAKEwwRDG8mAAAKCt4YEQwsBxEMbycAAArc
EQssBxELbycAAArcctEAAHATB3LrAABwEQcoKgAACnMrAAAKEwgRCG8sAAAKctoBAHARCHMtAAAK
JW8uAAAKcuMGAHAGbyIAAApvLwAACiYlby4AAApyEwcAcANvIgAACm8vAAAKJm8wAAAKEwkRCW8x
AAAKLBsRCRZvMgAACgsRCRdvMgAACgwRCRhvMgAACiYRCW8zAAAKEQhvNAAACt4MEQYsBxEGbycA
AArcBwgJEQRzNQAACioAAAABKAAAAgDWAArgAAwAAAAAAgDNAB/sAAwAAAAAAgCfAO+OAQwAAAAA
EzAFALMAAAADAAARfhUAAAoKfhUAAAoLIAAMAAAoFgAACgIoFwAACnQsAAABJRdvGAAACiVyMwcA
cG8ZAAAKJSDAJwkAbxoAAApzGwAACgwIcg0AAHByKQAAcAQoHAAACm8dAAAKJQhvHgAACiVyTwAA
cG8pAAAKJXKNAABwbx8AAApvIAAACnQUAAABILgLAAAoNgAACiVvIQAACg0SA/4WEAAAAW8iAAAK
Cm8jAAAKbyIAAAoLBgdzNwAACioAGzAHAC8DAAAEAAARAnsEAAAEbxoAAAYCewQAAARvGAAABgJ7
BAAABG8ZAAAGCgYoAgAABgsCewQAAARvHAAABgwCewQAAARvHQAABg0CewQAAARvGwAABhMEJXI9
BwBwKBwAAAoTBSVykQcAcBEEKBIAAAoTBnLHBwBwEQQoEgAAChMHCBMIcvkHAHATCXL5BwBwEwpy
+QcAcBMLFhMMK14fZCg2AAAKEQURBAcoBAAABiV7OAAAChMKJXs5AAAKEwsmEQpy+wcAcCg6AAAK
LRwRCnINCABwKDoAAAotDhEKcj8AAHAoOgAACiwYCSDoAwAAWig2AAAKEQwXWBMMEQwRCDKcEQpy
+wcAcCg6AAAKLRERCnINCABwKDoAAAo53wAAABEHEQQHKAUAAAYlezsAAAoTCyYRBREEBygEAAAG
JXs4AAAKEwolezkAAAoTCyYCchUIAHB9AQAABAJyJQgAcBEKckcIAHAoEgAACn0CAAAEAhuNJwAA
ASUWAnsCAAAEoiUXck0IAHCiJRgSAig8AAAKoiUZcmcIAHCiJRoSAyg8AAAKoig9AAAKfQIAAAQR
C3KLCABwKDoAAAosFgICewIAAARykQgAcCgcAAAKfQIAAAQWEw0CKD4AAAoWAig+AAAKbz8AAAoC
ewIAAAR+FQAAChYSDW9AAAAKOLgAAAARCnLRCABwKDoAAAosZREGBygDAAAGJXtBAAAKEwkle0IA
AAoTCyYRCW9DAAAKOoUAAAACchUIAHB9AQAABAJy2wgAcH0CAAAEFhMOAig+AAAKFgIoPgAACm8/
AAAKAnsCAAAEfhUAAAoWEg5vQAAACitFAnIVCABwfQEAAAQCchMJAHARCigcAAAKfQIAAAQWEw8C
KD4AAAoWAig+AAAKbz8AAAoCewIAAAR+FQAAChYSD29AAAAKAnsFAAAEbw4AAAYCewUAAARvCgAA
BihEAAAKEQlvEwAACm9FAAAKAnsFAAAEEQpvDAAABt5JExACchUIAHB9AQAABAIREG9GAAAKbyIA
AAp9AgAABBYTEQIoPgAAChYCKD4AAApvPwAACgJ7AgAABH4VAAAKFhIRb0AAAAreACoAQRwAAAAA
AACQAAAAVQIAAOUCAABJAAAAGAAAAaYCKEcAAAoCewQAAAQCewEAAARvIAAABgJ7BAAABAJ7AgAA
BG8iAAAGKnYCfhUAAAp9AQAABAJ+FQAACn0CAAAEAigRAAAGKioCAwQFKEgAAAoqZgJ7SQAACgJ7
SgAAChaUb0sAAAp0HAAAASoiAhYoTAAACiomAhcDKE0AAAoqWgMsCAIXKE4AAAoqckEJAHBzTwAA
CnoeAihQAAAKKh4CKFEAAAoqHgIoUgAACip+AihTAAAKAgJzFgAABn0DAAAEAgJzFwAABn0EAAAE
KgYqbgJ7BQAABCwSAnsFAAAEbw8AAAYCFH0FAAAEKgAAABMwBQBJAAAABQAAERYKKy4EBpQOBHLe
CQBwKFQAAAozGQIFBpoCBAaUKFUAAAoOBHMJAAAGfQUAAAQGF1gKBgMyzgJvFQAABgJvEgAABgIo
EwAABio6AihWAAAKAgN9BgAABCo6AihWAAAKAgN9BwAABCqWAnsHAAAEb1cAAApy8AkAcG9YAAAK
KFkAAApvWgAACnQnAAABKpYCewcAAARvVwAACnIGCgBwb1gAAAooWQAACm9aAAAKdCcAAAEqlgJ7
BwAABG9XAAAKciIKAHBvWAAACihZAAAKb1oAAAp0JwAAASqWAnsHAAAEb1cAAApyRAoAcG9YAAAK
KFkAAApvWgAACnQnAAABKpYCewcAAARvVwAACnJiCgBwb1gAAAooWQAACm9aAAAKpTcAAAEqlgJ7
BwAABG9XAAAKcoIKAHBvWAAACihZAAAKb1oAAAqlNwAAASqWAnsHAAAEb1cAAApytgoAcG9YAAAK
KFkAAApvWgAACnQnAAABKpYCewcAAARvWwAACnLUCgBwb1gAAAooWQAACm9aAAAKdCcAAAEqcgJ7
BwAABG9bAAAKctQKAHBvWAAACgNvXAAACiqWAnsHAAAEb1sAAApy9AoAcG9YAAAKKFkAAApvWgAA
CnQnAAABKnICewcAAARvWwAACnL0CgBwb1gAAAoDb1wAAAoqHgIoVgAACiqufggAAAQtHnIkCwBw
0AcAAAIoXQAACm9eAAAKc18AAAqACAAABH4IAAAEKhp+CQAABCoeAoAJAAAEKhp+CgAABCoeAihg
AAAKKi5zKAAABoAKAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKAJ
AAAjfgAADAoAAKwMAAAjU3RyaW5ncwAAAAC4FgAAmAsAACNVUwBQIgAAEAAAACNHVUlEAAAAYCIA
ACwDAAAjQmxvYgAAAAAAAAACAAABVxWiCQkBAAAA+gEzABYAAAEAAABAAAAACAAAAAoAAAApAAAA
GAAAAGAAAAAQAAAABQAAAAQAAAAQAAAAEwAAAAMAAAABAAAABwAAAAEAAAAAANoFAQAAAAAABgBm
BEkJBgD6BEkJBgCyAxsJDwC9CQAABgDfA+kGBgBJBOkGBgAqBOkGBgDhBOkGBgCGBOkGBgCfBOkG
BgD2A+kGBgARBGYFCgC6BJoCBgCWAIMGDgAPBykLDgDXASkLBgBqBtUABgAyCNUABgCpAIMGDgAg
AykLEgBHB08LEgAWCE8LBgCDAIMGBgBlB4MGCgBnCJoCFgBYCJoCCgCkB5oCFgC0BpoCCgCDC5oC
BgAiC4MGBgCVAxsJBgB4CGkJBgCYB9QGDgBlA8QFDgDGA8QFDgAIA78GBgB6A0kJBgBdBTMMBgCb
BYMGBgDNC4MGDgCICCkLDgC7AikLDgDvCykLDgDrCykLDgD7BjoBDgAkAykLBgA/CNUABgBEAoMG
EgA6B4UHEgCGAU8LEgAjB08LEgDtCE8LEgAJCIUHBgAbAUwFBgB9AIMGGgABAMQIBgBVB4MGHgAq
AJwIHgAaAJwIdwBTDAAAHgA7AJwIBgDbAoMGBgBQAoMGBgCODOkGAAAAALYAAAAAAAEAAQABABAA
mwYAABAAAQABAAEAEABKCAAAZQADAAkAAQAQAGULAAB1AAMAEQABABAAbgoAAHkABgAWAAEAEAAe
CgAAeQAHABcAAAAQAHAJzAl5AAgAIwAAARAAVgrMCZEACgAnAAEAvApDAAEA/gFDAAYAbgrNAQYA
HgrRAQYASgjVAQEAcwvZAQEAcwvZAREAigbdAREA+ALiAREAuAHnAVAgAAAAAMYAGAUGAAEAWCAA
AAAAkQCtBVkAAQB4IAAAAACRANUL6wEDAHwhAAAAAJEAqwr3AQUAWCMAAAAAkQCyBQUCCAAYJAAA
AADGAAALBgALAHAnAAAAAMYAIwUGAAsAmicAAAAAhhgECQYACwC4JwAAAACGGAQJUgELAMMnAAAA
AIYI4AsRAg4A3ScAAAAAhggdBs4ADgDmJwAAAACGCOwKEAAOAPAnAAAAAIYIAgZUAA8ABygAAAAA
hgCDDAYAEAAPKAAAAACGADQLBgAQABcoAAAAAIYANwvOABAAHygAAAAAhhgECQYAEAA/KAAAAADG
AZ0KBgAQAEEoAAAAAIEAJgEGABAAYCgAAAAAxgAnDBYCEAA/KAAAAADGAQALBgAUALUoAAAAAIYY
BAkiAhQAxCgAAAAAhhgECSICFQDTKAAAAACGCKYGdgAWAPkoAAAAAIYIpwF2ABYAHykAAAAAhghM
BnYAFgBFKQAAAACGCGsBdgAWAGspAAAAAIYIkwtIARYAkSkAAAAAhgguCUgBFgC3KQAAAACGCH0C
dgAWAN0pAAAAAIYIyAp2ABYAAyoAAAAAhgjaChAAFgAgKgAAAACGCBICdgAXAEYqAAAAAIYIKwIQ
ABcAYyoAAAAAgxgECQYAGABrKgAAAACTCHQIKAIYAJcqAAAAAJMI4AIuAhgAnioAAAAAkwjsAjQC
GACmKgAAAACWCEMLOwIZAK0qAAAAAIYYBAkGABkAtSoAAAAAkRgKCUACGQAAAAEAjwIAAAIAnAEA
AAEAWwYAAAIAXwoAAAEAWwYAAAIAWQEAAAMAXwoAAAEAWwYAAAIAWQEAAAMAXwoAAAEAbQgAAAIA
MQoAAAMAsgcAAAEARgUAAAEARgUAAAEAowoAAAIAEQkAAAMAhgoAAAQAsgcAAAEAiQsAAAEAiQsA
AAEARgUAAAEARgUAAAEARgUJAAQJAQARAAQJBgAZAAQJCgApAAQJEAAxAAQJEAA5AAQJEABBAAQJ
EABJAAQJEABRAAQJEABZAAQJEABhAAQJEABpAAQJBgD5AAQJBgAZAQQJFQApAQQJBgDpABgFBgAx
AcsAHAA5ARQLIgAxASgKKQBBAYAFLwA5AaMMQwBJATcGRgBZAV4DTQBZAUoDVABZAZEBEABZARsM
AQB5AAQJBgA5ARQLWQBpASIBXwBZAXoKZQBhAaULEABZATADawChAMgBcQDxAI8FdgChAG8HdgBx
AV8GegCRAAQJfwB5AXwBdgCBAUIDBgAMAAQJjQBZAdACEAA5ARsLrgCpAAQJEACJAZYGBgCRAQQJ
tACRAY4KuwCZATkFwQCRASQIyQCpARYBzgCpAZgF0gCpATwDBgCJATwDBgAUAAQJ4ACxAQMI9QAc
AAQJAQEUAHcAHwEUAKMAIwE5AZcMJwEcAHcAHwG5AY8FdgA5ARQLLQHpAOsAMwHBAXQCdgDBAfoI
OQEMAHcAHwEMAJAARAE5AaIFSAExAeYBHADhAAEBTAHBAPIBdgDpACMFBgDJAAQJUgHJAG0IXAHJ
ADEKYAHRAHEGZAHJACgGaQHJAHoGbgHJAC8GAQDJAQQJEADJAIMMBgDJADQLBgDJADcLzgDpAAQJ
BgDpAL8AeAHpAEUKfwHxAAQJBgDpABIKhQHRAXEGiwHpAG4MkgHZAT8MmAHpAPsJhQHZAS8FnwHx
AWICpAHxAYoMrQEBAQQJswEhAQQJBgAuAAsAZgIuABMAbwIuABsAjgIuACMAlwIuACsAwAIuADMA
wAIuADsAwAIuAEMAlwIuAEsAxgIuAFMAwAIuAFsA3QJDAGMAJwPjAGsAJwNBAXsAJwPJAXMAjgLp
AXMAjgI1AJcA7AAJAXQBAwABAAYABQAHAA4ACAAQAAAA5AtEAgAAIQZJAgAA8ApNAgAABgZJAgAA
qgZNAgAAqwFNAgAAUAZNAgAAbwFNAgAAlwtRAgAAMglRAgAAgQJNAgAA3gpNAgAALwJNAgAAeAhV
AgAAAANbAgAARwthAgIACgADAAIACwAFAAEADAAHAAEADQAJAAIAGAALAAIAGQANAAIAGgAPAAIA
GwARAAIAHAATAAIAHQAVAAIAHgAXAAIAHwAZAAEAIAAZAAIAIQAbAAEAIgAbAAIAJAAdAAIAJQAf
AAEAJgAfAAIAJwAhAIUA1wD6AASAAAABAAAAAAAAAAAAAAAAAFMAAAAEAAAAAAAAAAAAAAC7AQ0B
AAAAABAAAAAAAAAAAAAAAMQBsAsAAAAABAAAAAAAAAAAAAAAuwGDBgAAAAAEAAAAAAAAAAAAAAC7
Ad8AAAAAABAAAAAAAAAAAAAAAMQB+gsAAAAAEAAAAAAAAAAAAAAAxAHfBwAAAAAQAAAAAAAAAAAA
AADEAbwHAAAAAAAAAAABAAAAegkAAAAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNW
YXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAFNDXzNh
OTQ1MzFjMjNlZjQ3NzJiNGQyNjJhOTQ1OTdlMWYwAEl0ZW0xAEludDMyAFZhbHVlVHVwbGVgMgBJ
dGVtMgBWYWx1ZVR1cGxlYDMASXRlbTMAVmFsdWVUdXBsZWA0ADxNb2R1bGU+AEdldE91dHB1dElE
AGdldF9BU0NJSQBTeXN0ZW0uSU8AU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAEFk
ZEJsb2JEYXRhAG1zY29ybGliAFJlYWQAVGhyZWFkAEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVkAFN5
c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZAByZXBvcnRfcmVxdWVzdF9pZABnZXRfZHdocmVx
dWVzdGlkAFJlYWRUb0VuZABTcWxDb21tYW5kAHNldF9NZXRob2QAdl9wYXNzd29yZABnZXRfYXV0
aHBhc3N3b3JkAGRlZmF1bHRJbnN0YW5jZQBnZXRfU3RhdHVzQ29kZQBIdHRwU3RhdHVzQ29kZQBn
ZXRfVW5pY29kZQBnZXRfTWVzc2FnZQBjb2RlX3N0YXR1c19tZXNzYWdlAGdldF9kd2hjb2Rlc3Rh
dHVzbWVzc2FnZQBzZXRfZHdoY29kZXN0YXR1c21lc3NhZ2UASURpc3Bvc2FibGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X05hbWUAZ2V0X0RXSFNlcnZlck5hbWUAdl91
c2VybmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTZWN1cml0eVByb3RvY29s
VHlwZQBzZXRfQ29udGVudFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0
dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEh0dHBXZWJSZXNwb25zZQBHZXRSZXNwb25zZQBD
bG9zZQBEaXNwb3NlAHNldF9QcmVBdXRoZW50aWNhdGUAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVu
dEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X1ZhbHVlAEFkZFdp
dGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uVGhyZWFkaW5nAEVuY29kaW5nAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVG9CYXNlNjRTdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAGdldF9MZW5ndGgAYXV0
aABwb3N0UmVxdWVzdENhbmNlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfM2E5NDUzMWMyM2Vm
NDc3MmI0ZDI2MmE5NDU5N2UxZjAuZGxsAHNldF9kd2hyZXBvcnRzdGF0dXNfSXNOdWxsAGdldF9y
ZXBvcnRfSXNOdWxsAFNldE51bGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wAZ2V0X2R3aGluc3RhbmNl
dXJsAEdldFJlc3BvbnNlU3RyZWFtAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1h
bgBPcGVuAFNjcmlwdE1haW4AZ2V0X2F1dGhsb2dpbgBCbG9iQ29sdW1uAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAE5hbWVWYWx1ZUNv
bGxlY3Rpb24AV2ViSGVhZGVyQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERiQ29u
bmVjdGlvbgBTcWxDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AZ2V0X1N0YXR1
c0Rlc2NyaXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFw
AE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFNsZWVwAERiRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVy
AEV4ZWN1dGVSZWFkZXIAU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNlUG9pbnRN
YW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAFNxbFBhcmFtZXRlcgBGaXJlRXJyb3IALmN0
b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X2R3aHJldHJ5dGltZW91
dHNlY29uZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNDXzNhOTQ1MzFjMjNlZjQ3NzJiNGQyNjJhOTQ1OTdlMWYwLlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18zYTk0NTMxYzIzZWY0NzcyYjRkMjYyYTk0NTk3
ZTFmMC5Qcm9wZXJ0aWVzAGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAZ2V0X1JlYWRPbmx5VmFyaWFi
bGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5n
cwBzdmNDcmVkZW50aWFscwBDb25uZWN0aW9ucwBzZXRfSGVhZGVycwBCdWZmZXJzAGdldF9QYXJh
bWV0ZXJzAEZpbmlzaE91dHB1dHMAZ2V0UmVxdWVzdFN0YXR1cwBjb2RlX3N0YXR1cwBnZXRfZHdo
Y29kZXN0YXR1cwBzZXRfZHdoY29kZXN0YXR1cwBzZXRfZHdocmVwb3J0c3RhdHVzAENyZWF0ZU5l
d091dHB1dFJvd3MAQ29uY2F0AEZvcm1hdABPYmplY3QAU3lzdGVtLk5ldABTZXRFbmRPZlJvd3Nl
dABnZXRfRGVmYXVsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRD
b21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9kd2hyZXRyeWNvdW50AHNldF9BY2NlcHQATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AExvYWRSZXBvcnQAZ2V0X3JlcG9ydABI
dHRwV2ViUmVxdWVzdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABzZXRfVGltZW91
dABQcmltZU91dHB1dABTeXN0ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBv
bmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AEFkZFJvdwBnZXRfQXNzZW1ibHkA
b3BfRXF1YWxpdHkARW1wdHkAAAAAAAM6AAAHRwBFAFQAABtBAHUAdABoAG8AcgBpAHoAYQB0AGkA
bwBuAAANQgBhAHMAaQBjACAAAAcqAC8AKgAAD1UATgBLAE4ATwBXAE4AAD1hAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwBqAHMAbwBuADsAYwBoAGEAcgBzAGUAdAA9AFUAVABGAC0AOAABQ2EAcABwAGwA
aQBjAGEAdABpAG8AbgAvAGoAcwBvAG4ALAAgAHQAZQB4AHQALwBwAGwAYQBpAG4ALAAgACoALwAq
AAAZVQBLAFIATwAtAFMALQBEAFcASAAwADQAAYDtRABhAHQAYQAgAFMAbwB1AHIAYwBlAD0AewAw
AH0AOwAgAEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0AdABlAG0AcABkAGIAOwAgAEkA
bgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAPQBTAFMAUABJADsAIABDAG8AbgBu
AGUAYwB0AGkAbwBuACAAVABpAG0AZQBvAHUAdAA9ADAAOwAgAE0AdQBsAHQAaQBwAGwAZQBBAGMA
dABpAHYAZQBSAGUAcwB1AGwAdABTAGUAdABzAD0AdAByAHUAZQAAhQdzAGUAbABlAGMAdAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgACAAIABKAFMATwBOAF8AVgBBAEwAVQBF
ACgAagAuAHYAYQBsAHUAZQAsACAAJwAkAC4AaQBkACcAKQAgAGEAcwAgAGQAdwBoAF8AcgBlAHEA
dQBlAHMAdABfAGkAZAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABKAFMATwBOAF8AVgBBAEwAVQBFACgA
agAuAHYAYQBsAHUAZQAsACAAJwAkAC4AcwB0AGEAdAB1AHMALgBuAGEAbQBlACcAKQAgAGEAcwAg
AGQAdwBoAF8AcgBlAHAAbwByAHQAXwBzAHQAYQB0AHUAcwAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABpAHMAbgB1AGwAbAAoAEoAUwBPAE4AXwBWAEEA
TABVAEUAKABqAC4AdgBhAGwAdQBlACwAIAAnACQALgBlAHIAcgBvAHIAJwApACwAIAAnACcAKQAg
AGEAcwAgAGQAdwBoAF8AcgBlAHAAbwByAHQAXwBzAHQAYQB0AHUAcwBfAG0AZQBzAHMAYQBnAGUA
CgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAsACAAdgBhAGwAdQBlACAAYQBzACAAZAB3AGgAXwBhAHAAaQBfAGoA
cwBvAG4ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIABmAHIAbwBtACAAbwBwAGUAbgBqAHMAbwBuACgAQABkAHcA
aABfAHIAZQBwAG8AcgB0AF8AcwB0AGEAdAB1AHMAXwBqAHMAbwBuACwAIAAnACQALgBsAGkAcwB0
ACcAKQAgAGoAIAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHcAaABlAHIAZQAgAEoAUwBPAE4AXwBWAEEATABV
AEUAKABqAC4AdgBhAGwAdQBlACwAIAAnACQALgBpAGQAJwApACAAPQAgAEAAZAB3AGgAXwByAGUA
cQB1AGUAcwB0AF8AaQBkAAEvQABkAHcAaABfAHIAZQBwAG8AcgB0AF8AcwB0AGEAdAB1AHMAXwBq
AHMAbwBuAAAfQABkAHcAaABfAHIAZQBxAHUAZQBzAHQAXwBpAGQAAAlQAE8AUwBUAABTLwBwAGEA
ZwBpAG4AZwA/AGMAbwB1AG4AdAA9ADEAMAAmAG8AcgBkAGUAcgA9AC0AYwByAGUAYQB0AGUAVABp
AG0AZQAmAHAAYQBnAGUAPQAwAAE1LwBkAG8AdwBuAGwAbwBhAGQAPwByAGUAcABvAHIAdABSAGUA
cQB1AGUAcwB0AEkAZAA9AAAxLwBjAGEAbgBjAGUAbAA/AHIAZQBwAG8AcgB0AFIAZQBxAHUAZQBz
AHQASQBkAD0AAAEAEUIAVQBJAEwARABJAE4ARwAAB04ARQBXAAAPZgBhAGkAbAB1AHIAZQAAIXIA
ZQBwAG8AcgB0AF8AcwB0AGEAdAB1AHMAIAA9ACAAAAU7ACAAABlyAGUAdAByAHkAXwBjAG8AdQBu
AHQAOgAAIyAALAAgAHIAZQB0AHIAeQBfAHQAaQBtAGUAbwB1AHQAOgAABU8ASwAAPzsAcgBlAHEA
dQBlAHMAdAAgAGMAYQBuAGMAZQBsAGwAZQBkACAAcwB1AGMAYwBlAHMAcwBmAHUAbABsAHkAAAlE
AE8ATgBFAAA3QAQwBDcEPAQ1BEAEIABBBDoEMARHBDAEPQQ9BD4EMwQ+BCAARAQwBDkEOwQwBCAA
PQAgADAAAS1BBEIEMARCBEMEQQQgAD0EMAQgADgEQQRCBD4ERwQ9BDgEOgQ1BCAAPQAgAAGAm0kA
cwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAg
AHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAA
dABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAA
FWEAdQB0AGgAXwBsAG8AZwBpAG4AABthAHUAdABoAF8AcABhAHMAcwB3AG8AcgBkAAAhZAB3AGgA
XwBpAG4AcwB0AGEAbgBjAGUAXwB1AHIAbAAAHWQAdwBoAF8AcgBlAHEAdQBlAHMAdABfAGkAZAAA
H2QAdwBoAF8AcgBlAHQAcgB5AF8AYwBvAHUAbgB0AAAzZAB3AGgAXwByAGUAdAByAHkAXwB0AGkA
bQBlAG8AdQB0AF8AcwBlAGMAbwBuAGQAcwAAHUQAVwBIAF8AUwBlAHIAdgBlAHIATgBhAG0AZQAA
H2QAdwBoAF8AYwBvAGQAZQBfAHMAdABhAHQAdQBzAAAvZAB3AGgAXwBjAG8AZABlAF8AcwB0AGEA
dAB1AHMAXwBtAGUAcwBzAGEAZwBlAABxUwBDAF8AMwBhADkANAA1ADMAMQBjADIAMwBlAGYANAA3
ADcAMgBiADQAZAAyADYAMgBhADkANAA1ADkANwBlADEAZgAwAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAHV8Q9IaO6lOuqbcb5kGRSQABCABAQgDIAABBSABARER
BCABAQ4GIAEBEYCJBQAAEoCZBgADDg4ODgUgAR0FDgUAAQ4dBQ0HBw4ODhI9EUESRRJJAgYOBgAB
ARGAqQYAARKArQ4EIAEBAgUAAg4ODgUgAgEODgUgAQESPQUgABKAuQQgABFBAyAADgQgABJFBSAB
ARJFBxUROQMODg4JIAMBEwATARMCFgcNDg4ODg4SPRJRDhJVElkRQRJFEkkFAAIODhwGIAIBDhJV
BSAAEoDNByACEoDRDhwEIAASWQMgAAIEIAEOCAgVEU0EDg4ODgsgBAETABMBEwITAwgHBA4OEj0R
QQQAAQEIBhURXQIODgcgAgETABMBFQcSDg4ICA4ODg4IDg4OCAICAhJhAgMGEwADBhMCBQACAg4O
BQABDh0OBSAAEoDhCiAGAQgODg4IEAIDBhMBAyAACAUgAQEdBQkgAwESaR0IEm0DBhJpAwYdCAQg
ARwIBCABAggFIAIBCBwDBwEIBgACCBJtDgUgAR0ICAUgABKA6QYgARKA7RwFAAASgPEGIAEcEoD1
BCABARwIAAESgPkRgP0FIAASgQEHIAIBDhKBAQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYS
DAMGEnUEBhKAgQQGEoCFAwYSIAsAAhUROQMODg4ODg0AAxURTQQODg4ODg4OCwADFRFdAg4ODg4O
BCAAEnELIAQBCB0IHRJpEm0FIAEBEnUFAAASgIEFAAASgIUGAAEBEoCFBAAAEiADAAABBCgAEnED
KAACAygADgMoAAgFCAASgIEFCAASgIUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfM2E5NDUzMWMyM2VmNDc3MmI0ZDI2MmE5NDU5N2Ux
ZjAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAAAwUQAAAAAAAAAAAABKUQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPFEAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAAAAAA
AAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
AAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgAB
AAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAA
AAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAzAGEAOQA0
ADUAMwAxAGMAMgAzAGUAZgA0ADcANwAyAGIANABkADIANgAyAGEAOQA0ADUAOQA3AGUAMQBmADAA
AAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJ
AG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADMAYQA5ADQANQAzADEAYwAyADMAZQBmADQA
NwA3ADIAYgA0AGQAMgA2ADIAYQA5ADQANQA5ADcAZQAxAGYAMAAuAGQAbABsAAAASAASAAEATABl
AGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAA
MgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBP
AHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMwBhADkANAA1ADMAMQBjADIA
MwBlAGYANAA3ADcAMgBiADQAZAAyADYAMgBhADkANAA1ADkANwBlADEAZgAwAC4AZABsAGwAAABo
ACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADMAYQA5ADQANQAzADEAYwAyADMA
ZQBmADQANwA3ADIAYgA0AGQAMgA2ADIAYQA5ADQANQA5ADcAZQAxAGYAMAAAADQACAABAFAAcgBv
AGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0A
YgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAXDEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_3a94531c23ef4772b4d262a94597e1f0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::dwh_instance_url,User::dwh_request_id,User::dwh_retry_count,User::dwh_retry_timeout_seconds,$Package::auth_login,$Package::auth_password,$Project::DWH_ServerName</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::dwh_code_status,User::dwh_code_status_message</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">AB</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id.Outputs[Output 0].Columns[report]"
                              dataType="nText"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id.Outputs[Output 0].Columns[report]"
                              name="report" />
                            <outputColumn
                              refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id.Outputs[Output 0].Columns[dwh_report_status]"
                              dataType="wstr"
                              length="128"
                              lineageId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id.Outputs[Output 0].Columns[dwh_report_status]"
                              name="dwh_report_status" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.Paths[Output 0]"
                      endId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Inputs[Вход производного столбца]"
                      name="Output 0"
                      startId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id.Outputs[Output 0]" />
                    <path
                      refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.Paths[Выход производного столбца]"
                      endId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Inputs[Conditional Split Input]"
                      name="Выход производного столбца"
                      startId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей.Outputs[Выход производного столбца]" />
                    <path
                      refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.Paths[Файл скачали]"
                      endId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area.Inputs[Вход назначения &quot;OLE DB&quot;]"
                      name="Файл скачали"
                      startId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split.Outputs[Файл скачали]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{F462BF5D-C4A1-4C0D-8D7C-A9350F339498}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задания выражения генерируем  актуальную дату - dwh_execution_from_datetime"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; начало лога скачивание файла по api" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{D262C7D6-55B1-44DD-B55C-0254A918413E}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; начало лога скачивание файла по api"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{8E7389D7-EA14-41B4-8342-B1D9872BEBDA}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{815FBD14-A46D-47E8-A320-6701D7342453}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; окончание лога скачивание файла по api" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{BBF200D0-B7D6-41F8-B310-D2338684B6B6}"
              DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Контейнер последовательности общий процесс загрузки.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B4E5A208-E4D0-437F-8272-E18D63128367}"
          DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Контейнер последовательности общий процесс загрузки.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{5B35FC09-DE21-4CD3-A4BA-33B3BC0BB557}"
          DTS:From="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Контейнер последовательности общий процесс загрузки\Задача &quot;Выполнение SQL&quot; добавляем задание для загрузки staging_area" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{025D1F00-C51D-43CD-B8CF-7F8061C8A7CD}"
      DTS:From="Package\Задача &quot;Выполнение SQL&quot; обновление информациии о начале в таблице очереди"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Контейнер последовательности общий процесс загрузки" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{D9922F7D-B817-4874-944F-0F8C30B569F4}"
      DTS:From="Package\Задача &quot;Выполнение SQL&quot; обновление информациии о начале в таблице очереди"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - failure"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{F0969925-C082-4AD1-BB33-3C89560BB3F1}"
      DTS:From="Package\Контейнер последовательности общий процесс загрузки"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - success" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{2A3DB843-9C22-4BDD-B415-EED3A730D063}"
      DTS:From="Package\Задача &quot;Выполнение SQL&quot; начало обработки задания в таблице очереди"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Задача &quot;Выполнение SQL&quot; обновление информациии о начале в таблице очереди" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{4DE0D838-7DEA-4823-960A-693F5B513373}"
      DTS:From="Package\Задача &quot;Выполнение SQL&quot; начало обработки задания в таблице очереди"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - failure"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{0D692991-3FFA-4C0F-9128-3A9F490DA7DC}"
      DTS:From="Package\Контейнер последовательности общий процесс загрузки"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - failure"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="440,42"
          Id="Package\Задача &quot;Выполнение SQL&quot; начало обработки задания в таблице очереди"
          TopLeft="255.416666666668,18.2499999999999" />
        <NodeLayout
          Size="564,42"
          Id="Package\Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - failure"
          TopLeft="263.940476190478,798.202380952378" />
        <NodeLayout
          Size="375,42"
          Id="Package\Задача &quot;Выполнение SQL&quot; обновление информации о завершении в таблице очереди - success"
          TopLeft="551.369047619053,1281.86904761904" />
        <NodeLayout
          Size="484,42"
          Id="Package\Задача &quot;Выполнение SQL&quot; обновление информациии о начале в таблице очереди"
          TopLeft="702.845238095239,92.8888888888889" />
        <NodeLayout
          Size="458,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Задача &quot;Выполнение SQL&quot; добавляем задание для загрузки staging_area"
          TopLeft="1631.95238095238,471.833333333333" />
        <NodeLayout
          Size="484,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задания выражения генерируем  актуальную дату - dwh_execution_from_datetime"
          TopLeft="48.6666666666665,15" />
        <NodeLayout
          Size="486,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
          TopLeft="27.2499999999998,392.857142857143" />
        <NodeLayout
          Size="397,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json"
          TopLeft="30.5714285714287,319.571428571428" />
        <NodeLayout
          Size="346,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; генерируем json_request"
          TopLeft="55.3333333333334,166.666666666667" />
        <NodeLayout
          Size="394,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; начало лога отправка запроса по api"
          TopLeft="50.4999999999999,88.4761904761903" />
        <NodeLayout
          Size="427,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Выполнение SQL&quot; окончание лога отправка запроса по api"
          TopLeft="45.8571428571427,472.178571428571" />
        <NodeLayout
          Size="367,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *"
          TopLeft="49.3214285714289,240.142857142857" />
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint]"
          TopLeft="290.666666666667,57">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-43.1666666666666,31.4761904761903"
              Start="0,0"
              End="-43.1666666666666,23.9761904761903">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.7380952380951" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.7380952380951"
                    Point2="0,15.7380952380951"
                    Point3="-4,15.7380952380951" />
                  <mssgle:LineSegment
                    End="-39.1666666666666,15.7380952380951" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.1666666666666,15.7380952380951"
                    Point2="-43.1666666666666,15.7380952380951"
                    Point3="-43.1666666666666,19.7380952380951" />
                  <mssgle:LineSegment
                    End="-43.1666666666666,23.9761904761903" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 1]"
          TopLeft="247.5,130.47619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-19.1666666666665,36.1904761904767"
              Start="0,0"
              End="-19.1666666666665,28.6904761904767">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0952380952383" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0952380952383"
                    Point2="0,18.0952380952383"
                    Point3="-4,18.0952380952383" />
                  <mssgle:LineSegment
                    End="-15.1666666666665,18.0952380952383" />
                  <mssgle:CubicBezierSegment
                    Point1="-15.1666666666665,18.0952380952383"
                    Point2="-19.1666666666665,18.0952380952383"
                    Point3="-19.1666666666665,22.0952380952383" />
                  <mssgle:LineSegment
                    End="-19.1666666666665,28.6904761904767" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 2]"
          TopLeft="230.577380952381,208.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.47619047619"
              Start="0,0"
              End="0,23.97619047619">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.97619047619" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 3]"
          TopLeft="230.946428571429,282.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.428571428571"
              Start="0,0"
              End="0,29.928571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.928571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 4]"
          TopLeft="270.25,434.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.8928571428571,37.3214285714284"
              Start="0,0"
              End="-10.8928571428571,29.8214285714284">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.6607142857142" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.6607142857142"
                    Point2="0,18.6607142857142"
                    Point3="-4,18.6607142857142" />
                  <mssgle:LineSegment
                    End="-6.89285714285711,18.6607142857142" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.89285714285711,18.6607142857142"
                    Point2="-10.8928571428571,18.6607142857142"
                    Point3="-10.8928571428571,22.6607142857142" />
                  <mssgle:LineSegment
                    End="-10.8928571428571,29.8214285714284" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api.PrecedenceConstraints[Constraint 5]"
          TopLeft="229.071428571429,361.571428571428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="41.1785714285711,31.2857142857144"
              Start="0,0"
              End="41.1785714285711,23.7857142857144">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.6428571428572" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.6428571428572"
                    Point2="0,15.6428571428572"
                    Point3="4,15.6428571428572" />
                  <mssgle:LineSegment
                    End="37.1785714285711,15.6428571428572" />
                  <mssgle:CubicBezierSegment
                    Point1="37.1785714285711,15.6428571428572"
                    Point2="41.1785714285711,15.6428571428572"
                    Point3="41.1785714285711,19.6428571428572" />
                  <mssgle:LineSegment
                    End="41.1785714285711,23.7857142857144" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="event handler on error"
          ParentId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api"
          FontInfo="{assembly:Null}"
          Size="148,40"
          Id="48b54a6c-4157-48fc-91f1-6506b5800335"
          TopLeft="446.666666666668,240.976190476191" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="621,593"
          Size="621,636"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api"
          TopLeft="27.5476190476197,54.083333333333" />
        <NodeLayout
          Size="484,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задания выражения генерируем  актуальную дату - dwh_execution_from_datetime"
          TopLeft="29.68253968254,22.8412698412699" />
        <NodeLayout
          Size="486,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
          TopLeft="41.3246753246754,418.753246753247" />
        <NodeLayout
          Size="397,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; генерируем dwh_layer_param_json"
          TopLeft="35.1370851370853,312.727272727273" />
        <NodeLayout
          Size="398,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; начало лога скачивание файла по api"
          TopLeft="59.6825396825402,112.84126984127" />
        <NodeLayout
          Size="415,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача &quot;Выполнение SQL&quot; окончание лога скачивание файла по api"
          TopLeft="75.181818181818,526.181818181818" />
        <NodeLayout
          Size="297,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *"
          TopLeft="65.6984126984128,213.698412698413" />
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint]"
          TopLeft="271.68253968254,64.8412698412699">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.9999999999998,48.0000000000002"
              Start="0,0"
              End="-12.9999999999998,40.5000000000002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.0000000000001"
                    Point2="0,24.0000000000001"
                    Point3="-4,24.0000000000001" />
                  <mssgle:LineSegment
                    End="-8.99999999999977,24.0000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.99999999999977,24.0000000000001"
                    Point2="-12.9999999999998,24.0000000000001"
                    Point3="-12.9999999999998,28.0000000000001" />
                  <mssgle:LineSegment
                    End="-12.9999999999998,40.5000000000002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint 1]"
          TopLeft="258.68253968254,154.84126984127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-44.4841269841274,58.857142857143"
              Start="0,0"
              End="-44.4841269841274,51.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.4285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.4285714285715"
                    Point2="0,29.4285714285715"
                    Point3="-4,29.4285714285715" />
                  <mssgle:LineSegment
                    End="-40.4841269841274,29.4285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="-40.4841269841274,29.4285714285715"
                    Point2="-44.4841269841274,29.4285714285715"
                    Point3="-44.4841269841274,33.4285714285715" />
                  <mssgle:LineSegment
                    End="-44.4841269841274,51.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint 2]"
          TopLeft="214.198412698413,255.698412698413">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.4386724386725,57.02886002886"
              Start="0,0"
              End="19.4386724386725,49.52886002886">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.51443001443" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.51443001443"
                    Point2="0,28.51443001443"
                    Point3="4,28.51443001443" />
                  <mssgle:LineSegment
                    End="15.4386724386725,28.51443001443" />
                  <mssgle:CubicBezierSegment
                    Point1="15.4386724386725,28.51443001443"
                    Point2="19.4386724386725,28.51443001443"
                    Point3="19.4386724386725,32.51443001443" />
                  <mssgle:LineSegment
                    End="19.4386724386725,49.52886002886" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint 3]"
          TopLeft="283.503246753247,460.753246753247">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.428571428571"
              Start="0,0"
              End="0,57.928571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.928571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api.PrecedenceConstraints[Constraint 4]"
          TopLeft="233.637085137085,354.727272727273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="50.6875901875901,64.0259740259744"
              Start="0,0"
              End="50.6875901875901,56.5259740259744">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.0129870129872" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.0129870129872"
                    Point2="0,32.0129870129872"
                    Point3="4,32.0129870129872" />
                  <mssgle:LineSegment
                    End="46.6875901875901,32.0129870129872" />
                  <mssgle:CubicBezierSegment
                    Point1="46.6875901875901,32.0129870129872"
                    Point2="50.6875901875901,32.0129870129872"
                    Point3="50.6875901875901,36.0129870129872" />
                  <mssgle:LineSegment
                    End="50.6875901875901,56.5259740259744" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="event handler on error"
          ParentId="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api"
          FontInfo="{assembly:Null}"
          Size="148,40"
          Id="b484d9b6-beab-4a40-9241-1517fa11a6d5"
          TopLeft="386.714285714286,211.571428571429" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="540,725"
          Size="540,768"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api"
          TopLeft="962.404761904757,171.190476190475" />
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки.PrecedenceConstraints[Constraint]"
          TopLeft="648.54761904762,372.083333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="313.857142857137,56.4404761904753"
              Start="0,0"
              End="306.357142857137,56.4404761904753">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="183.922779922777,0" />
                  <mssgle:CubicBezierSegment
                    Point1="183.922779922777,0"
                    Point2="187.922779922777,0"
                    Point3="187.922779922777,4" />
                  <mssgle:LineSegment
                    End="187.922779922777,52.4404761904753" />
                  <mssgle:CubicBezierSegment
                    Point1="187.922779922777,52.4404761904753"
                    Point2="187.922779922777,56.4404761904753"
                    Point3="191.922779922777,56.4404761904753" />
                  <mssgle:LineSegment
                    End="306.357142857137,56.4404761904753" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки.PrecedenceConstraints[Constraint 1]"
          TopLeft="1502.40476190476,555.190476190475">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="129.547619047623,-62.357142857142"
              Start="0,0"
              End="122.047619047623,-62.357142857142">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.7738095238117,0" />
                  <mssgle:CubicBezierSegment
                    Point1="60.7738095238117,0"
                    Point2="64.7738095238117,0"
                    Point3="64.7738095238117,-4" />
                  <mssgle:LineSegment
                    End="64.7738095238117,-58.357142857142" />
                  <mssgle:CubicBezierSegment
                    Point1="64.7738095238117,-58.357142857142"
                    Point2="64.7738095238117,-62.357142857142"
                    Point3="68.7738095238117,-62.357142857142" />
                  <mssgle:LineSegment
                    End="122.047619047623,-62.357142857142" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="2104,1083"
          Size="2104,1126"
          Id="Package\Контейнер последовательности общий процесс загрузки"
          TopLeft="1225.08333333333,223.476190476191" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="1024.17857142857,134.888888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1252.90476190476,88.5873015873021"
              Start="0,0"
              End="1252.90476190476,81.0873015873021">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.6100520383884" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.6100520383884"
                    Point2="0,35.6100520383884"
                    Point3="4,35.6100520383884" />
                  <mssgle:LineSegment
                    End="1248.90476190476,35.6100520383884" />
                  <mssgle:CubicBezierSegment
                    Point1="1248.90476190476,35.6100520383884"
                    Point2="1252.90476190476,35.6100520383884"
                    Point3="1252.90476190476,39.6100520383884" />
                  <mssgle:LineSegment
                    End="1252.90476190476,81.0873015873021" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="865.511904761906,134.888888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-226.904761904761,663.313492063489"
              Start="0,0"
              End="-226.904761904761,655.813492063489">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,327.849659448468" />
                  <mssgle:CubicBezierSegment
                    Point1="0,327.849659448468"
                    Point2="0,331.849659448468"
                    Point3="-4,331.849659448468" />
                  <mssgle:LineSegment
                    End="-222.904761904761,331.849659448468" />
                  <mssgle:CubicBezierSegment
                    Point1="-222.904761904761,331.849659448468"
                    Point2="-226.904761904761,331.849659448468"
                    Point3="-226.904761904761,335.849659448468" />
                  <mssgle:LineSegment
                    End="-226.904761904761,655.813492063489" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-128.69372860863,336.849659448468,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1225.08333333333,972.809523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-298.714285714277,330.059523809516"
              Start="0,0"
              End="-291.214285714277,330.059523809516">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-115.740029392385,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-115.740029392385,0"
                    Point2="-119.740029392385,0"
                    Point3="-119.740029392385,4" />
                  <mssgle:LineSegment
                    End="-119.740029392385,326.059523809516" />
                  <mssgle:CubicBezierSegment
                    Point1="-119.740029392385,326.059523809516"
                    Point2="-119.740029392385,330.059523809516"
                    Point3="-123.740029392385,330.059523809516" />
                  <mssgle:LineSegment
                    End="-291.214285714277,330.059523809516" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="547.416666666668,60.2499999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="397.428571428571,32.638888888889"
              Start="0,0"
              End="397.428571428571,25.138888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.1265096618358" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.1265096618358"
                    Point2="0,13.1265096618358"
                    Point3="4,13.1265096618358" />
                  <mssgle:LineSegment
                    End="393.428571428571,13.1265096618358" />
                  <mssgle:CubicBezierSegment
                    Point1="393.428571428571,13.1265096618358"
                    Point2="397.428571428571,13.1265096618358"
                    Point3="397.428571428571,17.1265096618358" />
                  <mssgle:LineSegment
                    End="397.428571428571,25.138888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="403.416666666668,60.2499999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49.8571428571433,737.952380952378"
              Start="0,0"
              End="49.8571428571433,730.452380952378">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,365.341969053937" />
                  <mssgle:CubicBezierSegment
                    Point1="0,365.341969053937"
                    Point2="0,369.341969053937"
                    Point3="4,369.341969053937" />
                  <mssgle:LineSegment
                    End="45.8571428571433,369.341969053937" />
                  <mssgle:CubicBezierSegment
                    Point1="45.8571428571433,369.341969053937"
                    Point2="49.8571428571433,369.341969053937"
                    Point3="49.8571428571433,373.341969053937" />
                  <mssgle:LineSegment
                    End="49.8571428571433,730.452380952378" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="9.68722377232165,374.341969053937,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="1225.08333333333,600.142857142858">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-397.142857142852,219.05952380952"
              Start="0,0"
              End="-389.642857142852,219.05952380952">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-155.195256676631,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-155.195256676631,0"
                    Point2="-159.195256676631,0"
                    Point3="-159.195256676631,4" />
                  <mssgle:LineSegment
                    End="-159.195256676631,215.05952380952" />
                  <mssgle:CubicBezierSegment
                    Point1="-159.195256676631,215.05952380952"
                    Point2="-159.195256676631,219.05952380952"
                    Point3="-163.195256676631,219.05952380952" />
                  <mssgle:LineSegment
                    End="-389.642857142852,219.05952380952" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-174.436604332881,-15.7490234375,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="472,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="387,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; генерируем dwh_queue_param_json"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="451,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; окончание лога отправка запроса по api - failure"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError].PrecedenceConstraints[Constraint 4 1]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности отправка запроса к api\Задача &quot;Скрипт&quot; формирование csv файла на источнике *.EventHandlers[OnError].PrecedenceConstraints[Constraint 5 1]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="333,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Скрипт компонент скачивание отчета по request_id"
          TopLeft="225,50" />
        <NodeLayout
          Size="358,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Изменение полей добавление дополнительных полей"
          TopLeft="216,148" />
        <NodeLayout
          Size="155,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\Conditional Split"
          TopLeft="312,263" />
        <NodeLayout
          Size="384,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area"
          TopLeft="196,396" />
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.Paths[Выход производного столбца]"
          TopLeft="392.25,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73"
              Start="0,0"
              End="0,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.Paths[Output 0]"
          TopLeft="393.25,92">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.Paths[Файл скачали]"
          TopLeft="388.75,305">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,91"
              Start="0,0"
              End="0,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-32.38421875,36.68017578125,64.7684375,10.1396484375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="472,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задания выражения генерируем  актуальную дату - dwh_execution_to_datetime"
          TopLeft="61,63" />
        <NodeLayout
          Size="370,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задания выражения переменные для логирования ошибки"
          TopLeft="678,125" />
        <NodeLayout
          Size="530,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; добавляем номер попытки скачивания в dwh_queue_param_json"
          TopLeft="653,46.857142857143" />
        <NodeLayout
          Size="471,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; окончание лога скачивание файла по api - failure"
          TopLeft="97.968253968254,154.857142857143" />
        <NodeLayout
          Size="340,42"
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError]\Задача &quot;Выполнение SQL&quot; ошибка скачивания по api"
          TopLeft="702,275.857142857143" />
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="297,105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="36.468253968254,49.857142857143"
              Start="0,0"
              End="36.468253968254,42.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.9285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.9285714285715"
                    Point2="0,24.9285714285715"
                    Point3="4,24.9285714285715" />
                  <mssgle:LineSegment
                    End="32.468253968254,24.9285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="32.468253968254,24.9285714285715"
                    Point2="36.468253968254,24.9285714285715"
                    Point3="36.468253968254,28.9285714285715" />
                  <mssgle:LineSegment
                    End="36.468253968254,42.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError].PrecedenceConstraints[Constraint 1]"
          TopLeft="653,67.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-120,16.142857142857"
              Start="0,0"
              End="-112.5,16.142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-56,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-56,0"
                    Point2="-60,0"
                    Point3="-60,4" />
                  <mssgle:LineSegment
                    End="-60,12.142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="-60,12.142857142857"
                    Point2="-60,16.142857142857"
                    Point3="-64,16.142857142857" />
                  <mssgle:LineSegment
                    End="-112.5,16.142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError].PrecedenceConstraints[Constraint 2]"
          TopLeft="533,89.6666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145,56.3333333333333"
              Start="0,0"
              End="137.5,56.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="57.1926605504587,0" />
                  <mssgle:CubicBezierSegment
                    Point1="57.1926605504587,0"
                    Point2="61.1926605504587,0"
                    Point3="61.1926605504587,4" />
                  <mssgle:LineSegment
                    End="61.1926605504587,52.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="61.1926605504587,52.3333333333333"
                    Point2="61.1926605504587,56.3333333333333"
                    Point3="65.1926605504587,56.3333333333333" />
                  <mssgle:LineSegment
                    End="137.5,56.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *.EventHandlers[OnError].PrecedenceConstraints[Constraint 3]"
          TopLeft="863,167">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,108.857142857143"
              Start="0,0"
              End="9,101.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.4285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.4285714285715"
                    Point2="0,54.4285714285715"
                    Point3="4,54.4285714285715" />
                  <mssgle:LineSegment
                    End="5,54.4285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="5,54.4285714285715"
                    Point2="9,54.4285714285715"
                    Point3="9,58.4285714285715" />
                  <mssgle:LineSegment
                    End="9,101.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\Контейнер последовательности общий процесс загрузки\Контейнер последовательности скачивание файла по api\Задача потока данных загрузка csv файла *\OLE DB подключение загрузка сырых данных в incoming_area">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>