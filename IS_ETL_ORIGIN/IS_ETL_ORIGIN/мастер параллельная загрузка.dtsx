<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/20/2022 10:50:28 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NB2927"
  DTS:CreatorName="INSIDE\Ekaterina.Bileeva"
  DTS:DTSID="{82019F73-CEE1-4713-B8ED-67F548F19749}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5223.0"
  DTS:LocaleID="1049"
  DTS:MaxConcurrentExecutables="2"
  DTS:ObjectName="мастер параллельная загрузка"
  DTS:PackageType="5"
  DTS:ProtectionLevel="1"
  DTS:VersionBuild="107"
  DTS:VersionGUID="{B85519EE-D681-448E-8F7F-E01EF71C806A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{25578AE2-BFD5-4524-B334-B3C22B164A83}"
      DTS:ObjectName="dwh_parallel_task_count">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">2</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C36C7733-0E2F-4BF8-970E-7E65163F4BDC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::dwh_parallel_task_count]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwh_parallel_task_count">
      <DTS:VariableValue
        DTS:DataType="3">2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CEF79C40-9FD8-4357-B368-2BE98231D8E0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ISC_ExecutionServerName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ISC_ExecutionServerName">
      <DTS:VariableValue
        DTS:DataType="8">UKRO-S-DWH04</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE1D4630-3970-4BDF-8D65-D04FA87E295F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ISC_PackageFolderName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ISC_PackageFolderName">
      <DTS:VariableValue
        DTS:DataType="8">framework</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A0E32101-DCA2-469F-9807-174ADB5A121A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ISC_PackageProjectName">
      <DTS:VariableValue
        DTS:DataType="8">IS_ETL_Queue_Processor</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EFC8311D-6BD6-423D-9CA5-57EE9938F147}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageName">
      <DTS:VariableValue
        DTS:DataType="8">мастер обработка queue.dtsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A4A5A431-9CB4-4E6B-BCAC-4D961267EB7A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::ServerExecutionID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ServerExecutionId">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Задача &quot;Выполнение SQL&quot; обновление статусов после рестарта"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{55C7A02C-E2FE-48C6-8404-43E4D6003AA9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Задача &quot;Выполнение SQL&quot; обновление статусов после рестарта"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F395067F-5FFA-4AAB-A7A5-77D1978E5CFA}"
          SQLTask:SqlStatementSource="exec service_area.p_queue_update_status" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Задача &quot;Скрипт&quot; запуск параллельных процессов для загрузки заданий из очереди"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{86C42F0E-27AA-4183-A09D-23411077C5AB}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Задача &quot;Скрипт&quot; запуск параллельных процессов для загрузки заданий из очереди"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_20d401c694144af7902b42df36ecf42f"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::dwh_parallel_task_count,User::ISC_ExecutionServerName,User::ISC_PackageFolderName,User::ISC_PackageProjectName,User::PackageName,User::ServerExecutionId">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_20d401c694144af7902b42df36ecf42f.Properties.Settings.get_Default():ST_20d401c694144af7902b42df36ecf42f.Properties.Sett" +
    "ings")]

namespace ST_20d401c694144af7902b42df36ecf42f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="LocalPackage.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.SqlServer.Dts.Runtime;

namespace ST_20d401c694144af7902b42df36ecf42f
{
    class LocalPackage : DWPackage
    {
        private String packageLocation;

        public LocalPackage(String packageLocation)
        {
            this.packageLocation = packageLocation;
        }


       public void ExecutePackage(int threadInstanceNumber, int dwh_master_execution_id)
            {
                try
                {
                    Application app = new Application();
                    Package pkg = app.LoadPackage(this.packageLocation, null);

                    //Sets the thread instance number of the replicated template package
                    pkg.Parameters["ThreadInstanceNumber"].Value = threadInstanceNumber;

                    //Actually Executes the package
                    DTSExecResult results = pkg.Execute();

                    if (results == Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure)
                    {
                        String errormessage = "";

                        foreach (Microsoft.SqlServer.Dts.Runtime.DtsError errorList in pkg.Errors)
                        {
                            String error = errorList.Description.ToString();
                            errormessage = errormessage + error;
                        }

                        //System.Windows.Forms.MessageBox.Show(errormessage);

                    }

                }
                catch (Exception e)
                {
                    //System.Windows.Forms.MessageBox.Show("The Execution from your directory failed on Thread " + threadInstanceNumber + ". With error: " + e.ToString());
                }

            }
        }
}]]></ProjectItem>
          <ProjectItem
            Name="ICSPackage.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.SqlServer.Management.IntegrationServices;
using System.Data.SqlClient;
using System.Collections.ObjectModel;
using System.Threading;

namespace ST_20d401c694144af7902b42df36ecf42f
{


    class ISCPackage : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase, DWPackage
    {
        private String ssisConnectionString;
        private String folderName;
        private String projectName;
        private String packageName;

        /*This is the constructor method that initializes the object. */
        public ISCPackage(String ssisConnectionString, String folderName, String projectName, String packageName)
        {
            this.ssisConnectionString = ssisConnectionString;
            this.folderName = folderName;
            this.projectName = projectName;
            this.packageName = packageName;
        }

        public void ExecutePackage(int dwh_thread_number, int dwh_master_execution_id)
        {
            try
            {
                IntegrationServices ssisServer = new IntegrationServices(new SqlConnection(this.ssisConnectionString));
                Catalog cat = ssisServer.Catalogs["SSISDB"];
                CatalogFolder catFolder = cat.Folders[this.folderName];
                PackageInfo pkg = catFolder.Projects[this.projectName].Packages[this.packageName];

                //Creates the collection of execution parameters
                Collection<PackageInfo.ExecutionValueParameterSet> executionParameterSet = new Collection<PackageInfo.ExecutionValueParameterSet>();

                //Sets the execution of the threads as asynchronous
                //executionParameterSet.Add(new PackageInfo.ExecutionValueParameterSet { ObjectType = 50, ParameterName = "SYNCHRONIZED", ParameterValue = 1 });

                //Sets the logging level to the default level
                //executionParameterSet.Add(new PackageInfo.ExecutionValueParameterSet { ObjectType = 50, ParameterName = "LOGGING_LEVEL", ParameterValue = 1 });

                //Sets the ThreadInstanceNumber in the template package
                executionParameterSet.Add(new PackageInfo.ExecutionValueParameterSet
                {
                    ObjectType = 30
                ,
                    ParameterName = "dwh_thread_number"
                ,
                    ParameterValue = dwh_thread_number
                });

                //Sets the dwh_master_execution_id in the template package
                executionParameterSet.Add(new PackageInfo.ExecutionValueParameterSet
                {
                    ObjectType = 30
                ,
                    ParameterName = "dwh_master_execution_id"
                ,
                    ParameterValue = dwh_master_execution_id
                });



                //Actually executes the package on the Integration Services catalog and captures the executionIdentifier
                long executionIdentifier = pkg.Execute(false, null, executionParameterSet);

                ExecutionOperation executionOperation = ssisServer.Catalogs["SSISDB"].Executions[executionIdentifier];

                //This loop is needed due to the asynchronous nature of the multithreading.
                while (!executionOperation.Completed)
                {
                    executionOperation.Refresh();
                    Thread.Sleep(5000);
                }

            }
            catch (Exception e)
            {
                //System.Windows.Forms.MessageBox.Show("The Execution from the SSIS Catalog Failed on Thread " + dwh_thread_number + ". With error: " + e.ToString());
            }

        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;


using System.Collections.Concurrent;

using System.Diagnostics;
using System.Threading;
using System.Linq;
using System.IO;

using System.Threading.Tasks;
using Microsoft.SqlServer;
using System.Data.SqlClient;
#endregion

namespace ST_20d401c694144af7902b42df36ecf42f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        /// 

        private DWPackage pkg;



        public void Main()
		{
            // TODO: Add your code here
            try
            {
                String serverName = Dts.Variables["ISC_ExecutionServerName"].Value.ToString();
                String folderName = Dts.Variables["ISC_PackageFolderName"].Value.ToString();
                String projectName = Dts.Variables["ISC_PackageProjectName"].Value.ToString();
                String packageName = Dts.Variables["PackageName"].Value.ToString();



                //максимальное количество одновременно работающих потоков, задаем параметром
                int numThreads = Convert.ToInt32(Dts.Variables["dwh_parallel_task_count"].Value);
                int ServerExecutionId = Convert.ToInt32(Dts.Variables["ServerExecutionId"].Value);
                

                //Boolean is_executed_from_ssis_catalog = Convert.ToBoolean(Dts.Variables["IsExecuteFromSSISCatalog"].Value.ToString());
                

                  
                  String ssisConnectionString = String.Format("Data Source={0}; Initial Catalog = msdb; Integrated Security = SSPI;Connection Timeout=0;MultipleActiveResultSets=true", serverName);
                  //MessageBox.Show(ssisConnectionString.ToString());
                  pkg = new ISCPackage(ssisConnectionString, folderName, projectName, packageName);

                
                
                var listOfActions = new List<Action>();
                for (int i = 0; i < numThreads; i++)
                {                    
                    int num = i;
                    var packageThread = new Action(() => pkg.ExecutePackage(num, ServerExecutionId));
                    listOfActions.Add(packageThread);
                }

                var options = new ParallelOptions { MaxDegreeOfParallelism = numThreads };
                Parallel.Invoke(options, listOfActions.ToArray());
                



                /*
                while (Threads.Any(t => t.ThreadState == System.Threading.ThreadState.Running) ||
                           Threads.Any(t => t.ThreadState == System.Threading.ThreadState.WaitSleepJoin))
                {
                    Thread.Sleep(1000);
                };
                */

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception e)
            {
                //System.Windows.Forms.MessageBox.Show("The Package Failed from the Main thread. Exception: " + e.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }


        }

        #region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    

}
}]]></ProjectItem>
          <ProjectItem
            Name="DWPackage.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_20d401c694144af7902b42df36ecf42f
{
    interface DWPackage
    {
        void ExecutePackage(int threadInstanceNumber, int ServerExecutionId);
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_20d401c694144af7902b42df36ecf42f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_20d401c694144af7902b42df36ecf42f</msb:DisplayName>
    <msb:ProjectId>{B2C4633E-2CDE-47BC-928A-CE3647AC8FB3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_20d401c694144af7902b42df36ecf42f.csproj" />
    <msb:File Include="DWPackage.cs" />
    <msb:File Include="ICSPackage.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="LocalPackage.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_20d401c694144af7902b42df36ecf42f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_20d401c694144af7902b42df36ecf42f")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_20d401c694144af7902b42df36ecf42f.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E6516BCE-B57D-4524-BDE6-B0BA73CB93BC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_20d401c694144af7902b42df36ecf42f</RootNamespace>
    <AssemblyName>ST_ScriptMain</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.SqlServer.ConnectionInfo, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\assembly\GAC_MSIL\Microsoft.SqlServer.ConnectionInfo\13.0.0.0__89845dcd8080cc91\Microsoft.SqlServer.ConnectionInfo.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.SqlServer.Management.IntegrationServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\assembly\GAC_MSIL\Microsoft.SqlServer.Management.IntegrationServices\13.0.0.0__89845dcd8080cc91\Microsoft.SqlServer.Management.IntegrationServices.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.SqlServer.Management.Sdk.Sfc, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\assembly\GAC_MSIL\Microsoft.SqlServer.Management.Sdk.Sfc\13.0.0.0__89845dcd8080cc91\Microsoft.SqlServer.Management.Sdk.Sfc.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.SqlServer.Smo, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\assembly\GAC_MSIL\Microsoft.SqlServer.Smo\13.0.0.0__89845dcd8080cc91\Microsoft.SqlServer.Smo.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="DWPackage.cs" />
    <Compile Include="ICSPackage.cs" />
    <Compile Include="LocalPackage.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_20d401c694144af7902b42df36ecf42f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_20d401c694144af7902b42df36ecf42f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_20d401c694144af7902b42df36ecf42f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_20d401c694144af7902b42df36ecf42f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_20d401c694144af7902b42df36ecf42f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_ScriptMain.dll">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
AAAGAJcD+AcGACYE+AcGAOMCsgcPAGwIAAAGABADTgYGAHoDTgYGAFsDTgYGAA0ETgYGALcDTgYG
ANADTgYGACcDTgYGAEIDsgQKAGICGQUGADYAQgUOAPMGxQc/AJYJAAAOAAoGxQcGANkGrQUGAI8J
rQUSAJIBAwISAHkHAwIKAOsDGQUGAEMAzgAGAEcGrQUGAM8FrQUGAKsC+AcGAMYCsgcGAFYHGAgG
AP8GMgYWAJYCcwUWAPcCcwUWAH4CHQYaAMsG2gkOAOQHxQcOAHIGxQcOAOoExQcOAKEGxQcOAEQH
xQcOALkGxQcOAAsHxQcOAGAGxQcGAFwArQUOAEgBxQcOAIQGxQceACwBpwAGAPsAoQQOABMGxQcS
AO4FAwISAHYJAwISACsJAwISAGYHAwISAL0JAwISAEEJAwISAHAHAwIGAOMErQUSAIkHAwIKAGEF
GQUSALsIAwISAKEBAwIGAPwJrQUGAPwI5QgGAIkF5QgGAC0CrQUGAKoBrQUGABkKTgYAAAAAYgAA
AAAAAQABAKAAAABoAXkEAAABAAEAAAAQAF0BeQQ1AAEAAgAAABAAjQF5BE0ABQAEAAEAEADjBXkE
NQAGAAYAAAAQAB8IiAhNAAcACAAAARAAxQiICIEACQAMAAMBAABoCQAAZQAKAA8AAwEQAAEAAABN
AA0ADwADARAAIQAAAE0ADwAQAAEAzARhAQEA2gFhAQEA9wFhAQEAzgFhAQEA+gVhAQEAnQRkAREA
1AVoAREAUgJsAREAOAFwAQYGigB0AVaASwl3AVaAMgJ3AQYA2wh7AQYA6QB0AQYA0AV0AQYASgB/
AQAAAAAAAMYFfgGDAQEAUCAAAAAAhhilB4kBAwB4IAAAAADmAX4BgwEHAIQhAAAAAIYYpQcQAAkA
lCEAAAAA5gF+AYMBCgAkIgAAAACGAOkFBgAMALgjAAAAAIYYpQcGAAwAwCMAAAAAgxilBwYADADI
IwAAAACTCFIHkQEMAPQjAAAAAJMIOgKWAQwA+yMAAAAAkwhGApsBDAADJAAAAACWCLEJoQENAAok
AAAAAIYYpQcGAA0AEiQAAAAAkRirB6YBDQDAIwAAAACGGKUHBgANAMAjAAAAAIYYpQcGAA0AHiQA
AAAAgwAWAAYADQAAAAEAHQcAAAIA6QAAAAEAzAQAAAIA2gEAAAMA9wEAAAQAzgEAAAEAMgcAAAIA
FAEAAAEA+gUAAAEAHQcAAAIAFAEAAAEAcwQDAAgABAAIAAkApQcBABEApQcGABkApQcKACkApQcQ
ADEApQcQADkApQcQAEEApQcQAEkApQcQAFEApQcQAFkApQcQAGEApQcQALEApQcGANEApQcGANkA
pQcGAPkApQcVAGkApQcGAAkBpQcQABEBpQcnABEBzgguABkBpAU0ACEBGwk7ACkBpAVBADEBWwlI
ADkBpAVOAEEBewhVAEkBpAVbAAwApQcGAIEApQcGAIEAIwJoAIEA5QEQAIEAYARtAAwAAgFyAHkA
RAR4ACEBDAmGAGEBpAWMAGkB8gQGAHEBFweSAHkBBgGXAJkApQcGAIEBpQcGAIEBcgGkAKEAJwmt
AJEBpAWzAJkBVgRtAKEARAS6AKEANgnAAKkBlwfGAKkA8AnLALEB4wbRAJkA4QTRALkBgQnVAMEB
BAqXAGkAUwnvAMkBtwj1ANEBpAX7ANkBTAQCAeEBWgAGAbkBiAkLARQApQcGAMEApQcYARQAAgFy
AOkBpQcGAOkBtAUBABQADQoeAfEBmgEkAckBywkBAPkBvAEuAfkBFQo3AeEApQc9AQEBpQcGAAgA
LABXAQgAMABcASkAewDhAS4ACwC5AS4AEwDCAS4AGwDhAS4AIwDqAS4AKwATAi4AMwATAi4AOwAT
Ai4AQwDqAS4ASwAZAi4AUwATAi4AWwAwAkkAewDhAaMAYwBcAcMAcwBcASEBawBcASMBawBcAUMB
awBcARsAmwDbAAYAAQAHAAMAAABWB6oBAABaAq8BAAC1CbQBAgAJAAMAAgAKAAUAAQALAAUAAgAM
AAcAYQARAQSAAAABAAAAmiHxJgAAAAAAAOAFAAAEAAAAAAAAAAAAAABFAZ4AAAAAABAAAAAAAAAA
AAAAAE4B+gQAAAAAEAAAAAAAAAAAAAAATgHFBwAAAAAQAAAAAAAAAAAAAABOAWsAAAAAAAQAAAAA
AAAAAAAAAEUBrQUAAAAABAAAAAAAAAAAAAAARQGSAAAAAAAQAAAAAAAAAAAAAABOAacAAAAAAAAA
AAABAAAAKQgAAAgABQAJAAUACgAFAAAAAAAAPD5jX19EaXNwbGF5Q2xhc3MxXzAAPE1haW4+Yl9f
MAA8PmNfX0Rpc3BsYXlDbGFzczFfMQBDb2xsZWN0aW9uYDEATGlzdGAxAENTJDw+OF9fbG9jYWxz
MQBUb0ludDMyADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9f
AFN5c3RlbS5EYXRhAG1zY29ybGliAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlbWVudC5TZGsu
U2ZjAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFNlcnZlckV4ZWN1dGlvbklkAFRocmVhZABB
ZGQAZ2V0X0NvbXBsZXRlZABkd2hfbWFzdGVyX2V4ZWN1dGlvbl9pZABTZmNJbnN0YW5jZQBkZWZh
dWx0SW5zdGFuY2UARW52aXJvbm1lbnRSZWZlcmVuY2UASVNDUGFja2FnZQBEV1BhY2thZ2UATG9h
ZFBhY2thZ2UARXhlY3V0ZVBhY2thZ2UATG9jYWxQYWNrYWdlAEludm9rZQBWYXJpYWJsZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBwYWNrYWdlTmFtZQBmb2xkZXJOYW1lAHNl
dF9QYXJhbWV0ZXJOYW1lAHByb2plY3ROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAc2V0X09iamVjdFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBFeGVjdXRlAGdldF9WYWx1ZQBzZXRf
VmFsdWUAc2V0X1BhcmFtZXRlclZhbHVlAHZhbHVlAFNUXzIwZDQwMWM2OTQxNDRhZjc5MDJiNDJk
ZjM2ZWNmNDJmAHBrZwBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
c3Npc0Nvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAQ2F0YWxvZwBSZWZyZXNoAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRU
YXNrAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2RlbABTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAUGFyYWxsZWwAU1RfU2NyaXB0TWFpbi5kbGwAZ2V0X0l0ZW0AU3lz
dGVtAHNldF9NYXhEZWdyZWVPZlBhcmFsbGVsaXNtAEVudW0AcmVzb3VyY2VNYW4AU1RfU2NyaXB0
TWFpbgBBcHBsaWNhdGlvbgBwYWNrYWdlTG9jYXRpb24ARXhlY3V0aW9uT3BlcmF0aW9uAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAEFjdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBQYWNrYWdlQ29sbGVjdGlvbgBDYXRhbG9nQ29sbGVjdGlvbgBFeGVjdXRpb25PcGVyYXRp
b25Db2xsZWN0aW9uAENhdGFsb2dGb2xkZXJDb2xsZWN0aW9uAFByb2plY3RDb2xsZWN0aW9uAFNx
bENvbm5lY3Rpb24ARXhjZXB0aW9uAGdldF9EZXNjcmlwdGlvbgBQYWNrYWdlSW5mbwBDdWx0dXJl
SW5mbwBQcm9qZWN0SW5mbwBTbGVlcAB0aHJlYWRJbnN0YW5jZU51bWJlcgBkd2hfdGhyZWFkX251
bWJlcgBDYXRhbG9nRm9sZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAUGFyYW1ldGVyAER0c0Vycm9y
AEVycm9yRW51bWVyYXRvcgBEdHNFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZW1lbnQuSW50ZWdy
YXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfMjBkNDAxYzY5NDE0NGFmNzkwMmI0MmRmMzZlY2Y0MmYuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9QYWNrYWdlcwBTVF8yMGQ0MDFjNjk0
MTQ0YWY3OTAyYjQyZGYzNmVjZjQyZi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MA
Z2V0X0NhdGFsb2dzADw+NF9fdGhpcwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAFBhcmFsbGVsT3B0
aW9ucwBnZXRfRXhlY3V0aW9ucwBnZXRfRm9sZGVycwBnZXRfUGFyYW1ldGVycwBnZXRfRXJyb3Jz
AER0c0Vycm9ycwBTdWNjZXNzAGdldF9EdHMAZ2V0X1Byb2plY3RzAFNjcmlwdFJlc3VsdHMASURU
U0V2ZW50cwBDb25jYXQARm9ybWF0AE9iamVjdABFeGVjdXRpb25WYWx1ZVBhcmFtZXRlclNldABn
ZXRfRGVmYXVsdABEVFNFeGVjUmVzdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENs
aWVudABnZXRfQ3VycmVudABDb252ZXJ0AE1vdmVOZXh0AFRvQXJyYXkAZ2V0X0Fzc2VtYmx5AAAA
AA1TAFMASQBTAEQAQgAAI2QAdwBoAF8AdABoAHIAZQBhAGQAXwBuAHUAbQBiAGUAcgAAL2QAdwBo
AF8AbQBhAHMAdABlAHIAXwBlAHgAZQBjAHUAdABpAG8AbgBfAGkAZAAAKVQAaAByAGUAYQBkAEkA
bgBzAHQAYQBuAGMAZQBOAHUAbQBiAGUAcgAAAQAvSQBTAEMAXwBFAHgAZQBjAHUAdABpAG8AbgBT
AGUAcgB2AGUAcgBOAGEAbQBlAAArSQBTAEMAXwBQAGEAYwBrAGEAZwBlAEYAbwBsAGQAZQByAE4A
YQBtAGUAAC1JAFMAQwBfAFAAYQBjAGsAYQBnAGUAUAByAG8AagBlAGMAdABOAGEAbQBlAAAXUABh
AGMAawBhAGcAZQBOAGEAbQBlAAAvZAB3AGgAXwBwAGEAcgBhAGwAbABlAGwAXwB0AGEAcwBrAF8A
YwBvAHUAbgB0AAAjUwBlAHIAdgBlAHIARQB4AGUAYwB1AHQAaQBvAG4ASQBkAACA7UQAYQB0AGEA
IABTAG8AdQByAGMAZQA9AHsAMAB9ADsAIABJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwAg
AD0AIABtAHMAZABiADsAIABJAG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5ACAA
PQAgAFMAUwBQAEkAOwBDAG8AbgBuAGUAYwB0AGkAbwBuACAAVABpAG0AZQBvAHUAdAA9ADAAOwBN
AHUAbAB0AGkAcABsAGUAQQBjAHQAaQB2AGUAUgBlAHMAdQBsAHQAUwBlAHQAcwA9AHQAcgB1AGUA
AHFTAFQAXwAyADAAZAA0ADAAMQBjADYAOQA0ADEANAA0AGEAZgA3ADkAMAAyAGIANAAyAGQAZgAz
ADYAZQBjAGYANAAyAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAq8uwpx06b0WAf5Hr6PwgtQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQEReQsHAxUSOQESQQoS
RQYgAQESgIUFIAASgI0GIAESgJEOBSAAEoCVBiABEoCZDgUgABKAnQYgARKAoQ4FIAASgKUFIAES
PQ4GFRI5ARJBBCABAQYEIAEBHAUgAQETAA0gAwoCEoCtFRI5ARJBBSAAEoCxBSABEkUKBAABAQgD
IAACCAcEElEOElUOCCACElEOEoDFBSAAEoDJBiABEoDNDgUgABGA0QUgABKA1QQgABJVBSAAEoDZ
AyAADgUAAg4ODhMHChIkDg4ODggOFRJdARJhCBJhBSAAEoDlBSAAEoDpBiABEoDtHAMgABwEAAEI
HAUAAg4OHAYVEl0BEmEFIAIBHBgFIAAdEwAJAAIBEoD1HRJhCAABEoD9EYEBBSAAEoEFByACAQ4S
gQUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAgYOAwYSCAMGEnEDBhJ1AwYSHAIGCAMGESAD
BhIUAwYSJAUgAgEICAcgBAEODg4OBAAAEnEEAAASdQUAAQESdQQAABIcAwAAAQQIABJxBAgAEnUE
CAASHAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U1RfMjBkNDAxYzY5NDE0NGFmNzkwMmI0MmRmMzZlY2Y0MmYAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABgPAAAAAAAAAAAAAB6PAAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbDwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAuAMAAAAAAAAAAAAAuAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAPEmmiEAAAEA8SaaIT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBBgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAPQCAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AMgAwAGQANAAwADEAYwA2ADkANAAxADQANABhAGYANwA5ADAAMgBiADQAMgBkAGYAMwA2AGUA
YwBmADQAMgBmAAAAPAAOAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgANgAw
ADIALgA5ADkANgA5AAAARAASAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBTAGMA
cgBpAHAAdABNAGEAaQBuAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwA
VAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAEwAEgABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwBTAGMAcgBpAHAAdABNAGEAaQBuAC4AZABsAGwAAABoACQAAQBQAHIA
bwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADIAMABkADQAMAAxAGMANgA5ADQAMQA0ADQAYQBm
ADcAOQAwADIAYgA0ADIAZABmADMANgBlAGMAZgA0ADIAZgAAAEAADgABAFAAcgBvAGQAdQBjAHQA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA2ADAAMgAuADkAOQA2ADkAAABEAA4AAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADYAMAAyAC4AOQA5ADYAOQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIw8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{205C7616-C05A-4744-BB43-887312265D52}"
      DTS:From="Package\Задача &quot;Выполнение SQL&quot; обновление статусов после рестарта"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Задача &quot;Скрипт&quot; запуск параллельных процессов для загрузки заданий из очереди" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="393,42"
          Id="Package\Задача &quot;Выполнение SQL&quot; обновление статусов после рестарта"
          TopLeft="199,67" />
        <NodeLayout
          Size="491,42"
          Id="Package\Задача &quot;Скрипт&quot; запуск параллельных процессов для загрузки заданий из очереди"
          TopLeft="151,182" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="396,109">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73"
              Start="0,0"
              End="0,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>